---
title: "Rain, Hail or Shine: Unveiling Mysteries of the Sky"
subtitle: "Exploratory Data Analysis"
author: "Roger Chen"
date: "24 Mar 2024"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  freeze: true
  warning: false
  message: false
number-sections: true
editor: visual
---

# Issues to address

The group's exploratory data analysis seeks to address the following:

-   examine possible correlations between mean, minimum and maximum temperatures and rainfall

-   data visualisations of temperature by years, months and stations,

-   data visualisations of rainfall by years, months and stations.

# **Installing and loading the required libraries**

The following code chunk is used to install the necessary R packages:

```{r}
#| code-fold: true

pacman::p_load(tidyverse,ggridges,ggthemes,ggstatsplot,hrbrthemes,dplyr,plotly,ggiraph,lubridate, car)
```

# **Importing the Dataset**

```{r}
#| code-fold: true

data <- read_rds("data/weather_data_imputed.rds")

glimpse(data)
```

```{r}
#| code-fold: true

DT::datatable(data, class = "display compact", style = "bootstrap5")

```

## **Adding year and month columns - for ease of analysis**

For ease of analysis for EDA, the DATE in *data* was further broken down into year and month and added as columns:

```{r}
#| code-fold: true

data <- data %>%
  mutate(Year = year(tdate), Month = month(tdate))

glimpse(data)
```

# **Exploratory Data Analysis (EDA)**

## **Correlation Analysis**

::: panel-tabset
### Correlation Matrix

```{r}
#| code-fold: true

ggcorrmat(
  data,
  cor.vars = c(min_monthly_temperature, mean_monthly_temperature, max_monthly_temperature, monthly_rainfall),
  cor.vars.names = NULL,
  matrix.type = "upper",
  type = "parametric",
  tr = 0.1,
  partial = TRUE,
  digits = 2L,
  sig.level = 0.05,
  conf.level = 0.95,
  bf.prior = 0.707,
  p.adjust.method = "holm",
  pch = "cross",
  ggcorrplot.args = list(method = "square", outline.color = "black", pch.cex = 14),
  package = "RColorBrewer",
  palette = "Dark2",
  colors = c("#E69F00", "white", "#009E73"),
  ggtheme = ggstatsplot::theme_ggstatsplot(),
  ggplot.component = NULL,
  title = "Correlation Matrix" ,
  subtitle = NULL,
  caption = NULL
  )
```

### Mean Temperature Vs Minimum Temperature

```{r}
#| code-fold: true

ggscatterstats(
      data = data,
      x = mean_monthly_temperature,
      y = min_monthly_temperature,
      xlab = "Mean Temperature",
      ylab = "Minimum Temperature",
      title = "Correlation Scatter Plot",
      marginal = FALSE
    )
```

### Mean Temperature Vs Maximum Temperature

```{r}
#| code-fold: true

ggscatterstats(
      data = data,
      x = mean_monthly_temperature,
      y = max_monthly_temperature,
      xlab = "Mean Temperature",
      ylab = "Maximum Temperature",
      title = "Correlation Scatter Plot",
      marginal = FALSE
    )
```

### Maximum Temperature Vs Minimum Temperature

```{r}
#| code-fold: true

ggscatterstats(
      data = data,
      x = max_monthly_temperature,
      y = min_monthly_temperature,
      xlab = "Maximum Temperature",
      ylab = "Minimum Temperature",
      title = "Correlation Scatter Plot",
      marginal = FALSE
    )
```

### Mean Temperature Vs Rainfall

The following code chunk is used.

```{r}
#| code-fold: true

ggscatterstats(
      data = data,
      x = mean_monthly_temperature,
      y = monthly_rainfall,
      xlab = "Maximum Temperature",
      ylab = "Minimum Temperature",
      title = "Correlation Scatter Plot",
      marginal = FALSE
    )
```

### Minimum Temperature Vs Rainfall

```{r}
#| code-fold: true

ggscatterstats(
      data = data,
      x = min_monthly_temperature,
      y = monthly_rainfall,
      xlab = "Maximum Temperature",
      ylab = "Minimum Temperature",
      title = "Correlation Scatter Plot",
      marginal = FALSE
    )
```

### Maximum Temperature Vs Rainfall

```{r}
#| code-fold: true

ggscatterstats(
      data = data,
      x = max_monthly_temperature,
      y = monthly_rainfall,
      xlab = "Maximum Temperature",
      ylab = "Minimum Temperature",
      title = "Correlation Scatter Plot",
      marginal = FALSE
    )

```
:::

## **Exploring relationships for temperature/ rainfall between stations**

::: panel-tabset
### Mean Temperature by Station

Violin Plot

```{r, fig.height=10, fig.width=15}
#| code-fold: true

data$station <- reorder(data$station, data$mean_monthly_temperature)
          
ggbetweenstats(
  data = data,
  x = station, 
  y = mean_monthly_temperature,
  type = "p",
  mean.ci = TRUE, 
  title = "Mean Monthly Temperature",
  pairwise.comparisons = TRUE, 
  pairwise.display = "s",
  p.adjust.method = "fdr",
  messages = FALSE) +
  labs(title = 'Violin Plot of Mean Monthly Temperature by Stations',
       y = "Temperature") +
  theme(axis.text.x = element_text(angle = 60,
                                   size = 8))
```

Ridgeline Plot

```{r}
#| code-fold: true

ggplot(data,
       aes(x = mean_monthly_temperature, 
       y = station, 
       fill = stat(x))) +
       geom_density_ridges_gradient(scale =2,
                                    rel_min_height = 0.01,
                                    gradient_lwd = 1.) +
  scale_y_discrete(name= NULL) +
  scale_fill_viridis_c(name = "°C", option = "C") +
  labs(title = 'Ridgeline Plot of Mean Monthly Temperature by Stations',
       x = "Temperature (°C)",
       y = "Station") +
  theme_ridges(font_size = 10, grid = TRUE) +
  theme(plot.title = element_text(size = 14),
        plot.subtitle = element_text(size = 10),
        axis.title.x = element_text(size = 8),
        axis.title.y = element_text(size = 8, angle = 360))
```

### Minimum Temperature by Station

Violin Plot

```{r, fig.height=10, fig.width=15}
#| code-fold: true

data$station <- reorder(data$station, data$min_monthly_temperature)
          
ggbetweenstats(
  data = data,
  x = station, 
  y = min_monthly_temperature,
  type = "p",
  mean.ci = TRUE, 
  title = "Minimum Monthly Temperature",
  pairwise.comparisons = TRUE, 
  pairwise.display = "s",
  p.adjust.method = "fdr",
  messages = FALSE) +
  labs(title = 'Violin Plot of Minimum Monthly Temperature by Stations',
       y = "Temperature") +
  theme(axis.text.x = element_text(angle = 60,
                                   size = 8))
```

Rideline Plot

```{r}
#| code-fold: true

ggplot(data,
       aes(x = min_monthly_temperature, 
       y = station, 
       fill = stat(x))) +
       geom_density_ridges_gradient(scale =2,
                                    rel_min_height = 0.01,
                                    gradient_lwd = 1.) +
  scale_y_discrete(name= NULL) +
  scale_fill_viridis_c(name = "°C", option = "C") +
  labs(title = 'Ridgeline Plot of Minimum Monthly Temperature by Stations',
       x = "Temperature (°C)",
       y = "Station") +
  theme_ridges(font_size = 10, grid = TRUE) +
  theme(plot.title = element_text(size = 14),
        plot.subtitle = element_text(size = 10),
        axis.title.x = element_text(size = 8),
        axis.title.y = element_text(size = 8, angle = 360))
```

### Maximum Temperature by Station

Violin Plot

```{r, fig.height=10, fig.width=15}
#| code-fold: true

data$station <- reorder(data$station, data$max_monthly_temperature)
          
ggbetweenstats(
  data = data,
  x = station, 
  y = max_monthly_temperature,
  type = "p",
  mean.ci = TRUE, 
  title = "Maximum Monthly Temperature",
  pairwise.comparisons = TRUE, 
  pairwise.display = "s",
  p.adjust.method = "fdr",
  messages = FALSE) +
  labs(title = 'Violin Plot of Maximum Monthly Temperature by Stations',
       y = "Temperature") +
  theme(axis.text.x = element_text(angle = 60,
                                   size = 8))
```

Ridgeline Plot

```{r}
#| code-fold: true

ggplot(data,
       aes(x = max_monthly_temperature, 
       y = station, 
       fill = stat(x))) +
       geom_density_ridges_gradient(scale =2,
                                    rel_min_height = 0.01,
                                    gradient_lwd = 1.) +
  scale_y_discrete(name= NULL) +
  scale_fill_viridis_c(name = "°C", option = "C") +
  labs(title = 'Ridgeline Plot of Maximum Monthly Temperature by Stations',
       x = "Temperature (°C)",
       y = "Station") +
  theme_ridges(font_size = 10, grid = TRUE) +
  theme(plot.title = element_text(size = 14),
        plot.subtitle = element_text(size = 10),
        axis.title.x = element_text(size = 8),
        axis.title.y = element_text(size = 8, angle = 360))
```

### Rainfall by Station

Violin Plot

```{r, fig.height=10, fig.width=15}
#| code-fold: true

data$station <- reorder(data$station, data$monthly_rainfall)
          
ggbetweenstats(
  data = data,
  x = station, 
  y = monthly_rainfall,
  type = "p",
  mean.ci = TRUE, 
  title = "Monthly Rainfall",
  pairwise.comparisons = TRUE, 
  pairwise.display = "s",
  p.adjust.method = "fdr",
  messages = FALSE) +
  labs(title = 'Violin Plot of Monthly Rainfall by Stations',
       y = "Temperature") +
  theme(axis.text.x = element_text(angle = 60,
                                   size = 8))
```

Ridgeline Plot

```{r}
#| code-fold: true

ggplot(data,
       aes(x = monthly_rainfall, 
       y = station, 
       fill = stat(x))) +
       geom_density_ridges_gradient(scale =2,
                                    rel_min_height = 0.01,
                                    gradient_lwd = 1.) +
  scale_y_discrete(name= NULL) +
  scale_fill_viridis_c(name = "°C", option = "C") +
  labs(title = 'Ridgeline Plot of Monthly Rainfall by Stations',
       x = "Temperature (°C)",
       y = "Station") +
  theme_ridges(font_size = 10, grid = TRUE) +
  theme(plot.title = element_text(size = 14),
        plot.subtitle = element_text(size = 10),
        axis.title.x = element_text(size = 8),
        axis.title.y = element_text(size = 8, angle = 360))
```
:::

## **Exploring relationships for temperature/ rainfall across years**
:::panel-tabset

## Mean Temperature by Year
```{r, fig.height=10, fig.width=15}
#| code-fold: true

ggbetweenstats(
  data = data,
  x = Year, 
  y = mean_monthly_temperature,
  type = "p",
  mean.ci = TRUE, 
  title = "Violine Plots by All Stations",
  pairwise.comparisons = TRUE, 
  pairwise.display = "s",
  p.adjust.method = "fdr",
  messages = FALSE)

```

## Minimum Temperature by Year
```{r, fig.height=10, fig.width=15}
#| code-fold: true

ggbetweenstats(
  data = data,
  x = Year, 
  y = min_monthly_temperature,
  type = "p",
  mean.ci = TRUE, 
  title = "Violine Plots by All Stations",
  pairwise.comparisons = TRUE, 
  pairwise.display = "s",
  p.adjust.method = "fdr",
  messages = FALSE)

```

## Maximum Temperature by Year
```{r, fig.height=10, fig.width=15}
#| code-fold: true

ggbetweenstats(
  data = data,
  x = Year, 
  y = max_monthly_temperature,
  type = "p",
  mean.ci = TRUE, 
  title = "Violine Plots by All Stations",
  pairwise.comparisons = TRUE, 
  pairwise.display = "s",
  p.adjust.method = "fdr",
  messages = FALSE)

```

## Rainfall by Year
```{r, fig.height=10, fig.width=15}
#| code-fold: true

ggbetweenstats(
  data = data,
  x = Year, 
  y = monthly_rainfall,
  type = "p",
  mean.ci = TRUE, 
  title = "Violine Plots by All Stations",
  pairwise.comparisons = TRUE, 
  pairwise.display = "s",
  p.adjust.method = "fdr",
  messages = FALSE)

```

:::

## **Exploring relationships for temperature/ rainfall across months**
:::panel-tabset

## Mean Temperature by Month
Violin Plot
```{r, fig.height=10, fig.width=15}
#| code-fold: true

ggbetweenstats(
  data = data,
  x = Month, 
  y = mean_monthly_temperature,
  type = "p",
  mean.ci = TRUE, 
  title = "Violine Plots by All Stations",
  pairwise.comparisons = TRUE, 
  pairwise.display = "s",
  p.adjust.method = "fdr",
  messages = FALSE)

```


## Minimum Temperature by Month
Violin Plot
```{r, fig.height=10, fig.width=15}
#| code-fold: true

ggbetweenstats(
  data = data,
  x = Month, 
  y = min_monthly_temperature,
  type = "p",
  mean.ci = TRUE, 
  title = "Violine Plots by All Stations",
  pairwise.comparisons = TRUE, 
  pairwise.display = "s",
  p.adjust.method = "fdr",
  messages = FALSE)

```

## Maximum Temperature by Month
Violin Plot
```{r, fig.height=10, fig.width=15}
#| code-fold: true

ggbetweenstats(
  data = data,
  x = Month, 
  y = max_monthly_temperature,
  type = "p",
  mean.ci = TRUE, 
  title = "Violine Plots by All Stations",
  pairwise.comparisons = TRUE, 
  pairwise.display = "s",
  p.adjust.method = "fdr",
  messages = FALSE)

```

## Rainfall by Month
Violin Plot
```{r, fig.height=10, fig.width=15}
#| code-fold: true

ggbetweenstats(
  data = data,
  x = Month, 
  y = monthly_rainfall,
  type = "p",
  mean.ci = TRUE, 
  title = "Violine Plots by All Stations",
  pairwise.comparisons = TRUE, 
  pairwise.display = "s",
  p.adjust.method = "fdr",
  messages = FALSE)

```

Histogram Plot
```{r}

```
:::