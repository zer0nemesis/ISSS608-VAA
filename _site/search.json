[
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html",
    "title": "Take Home Ex 02: DataVis Makeover",
    "section": "",
    "text": "In this take home exercise, we will:\n\nselect one of the Take-home Exercise 1 prepared by my classmate, Freddie Jr. Ngo Tan\ncritic the submission in terms of clarity and aesthetics,\nprepare a sketch for the alternative design by using the data visualisation design principles and best practices we had learned in Lesson 1 and 2, and\nremake the original design by using ggplot2, ggplot2 extensions and tidyverse packages.\n\n\n\nThe aim of Take Home Exercise 01 was to use appropriate Exploratory Data Analysis (EDA) methods and ggplot2 functions to reveal:\n\nthe distribution of Singapore students’ performance in mathematics, reading, and science, and\nthe relationship between these performances with schools, gender and socioeconomic status of the students.\n\nThe dataset used was extracted from the “PISA 2022 database” which contains the full set of responses from individual students."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#recap-of-take-home-exercise-01",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#recap-of-take-home-exercise-01",
    "title": "Take Home Ex 02: DataVis Makeover",
    "section": "",
    "text": "The aim of Take Home Exercise 01 was to use appropriate Exploratory Data Analysis (EDA) methods and ggplot2 functions to reveal:\n\nthe distribution of Singapore students’ performance in mathematics, reading, and science, and\nthe relationship between these performances with schools, gender and socioeconomic status of the students.\n\nThe dataset used was extracted from the “PISA 2022 database” which contains the full set of responses from individual students."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#loading-r-packages",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#loading-r-packages",
    "title": "Take Home Ex 02: DataVis Makeover",
    "section": "2.1 Loading R Packages",
    "text": "2.1 Loading R Packages\nIn this take-home exercise, eleven R packages will be used. They are:\n\ntidyverse,\nhaven,\nggplot2,\nggrepel,\npatchwork,\nggthemes,\nhrbrthemes,\nggdist,\nggridges,\ncolorspace,\ngridExtra,\ncowplot.\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse, haven, ggplot2, ggrepel, patchwork, ggthemes, hrbrthemes, ggdist, ggridges, colorspace, gridExtra,cowplot)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#importing-pisa-2022-data",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#importing-pisa-2022-data",
    "title": "Take Home Ex 02: DataVis Makeover",
    "section": "2.2 Importing PISA 2022 Data",
    "text": "2.2 Importing PISA 2022 Data\nThe code chunk below uses the read_sas function from the haven package to import PISA data into R.\n\nstu_qqq &lt;- read_sas(\"data/stu_qqq.sas7bdat\")\n\nWe will next filter the observations to those from Singapore, using the filter function from the dpylr package.\n\nstu_qqq_SG &lt;- stu_qqq %&gt;%\n  filter(CNT == \"SGP\")\n\nWe will then save the file as a rds document in the data folder, using write_rds function. This reduces the file size from 3.9GB to 65.3MB, which makes it easier to push to Github subsequently.\n\nwrite_rds(stu_qqq_SG, \"data/stu_qqq_SG.rds\")\n\nWe will now import the file back into the R enviroment using the read_rds function.\n\nstu_qqq_SG &lt;- read_rds(\"data/stu_qqq_SG.rds\")\n\n\n\n\n\n\n\nWarning\n\n\n\nRemember to:\n\ndelete the 3.9GB source file from the data folder; and\ninclude “#| eval: false” into the first three code chunks of this section."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#original-plot-of-students-performance-distribution",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#original-plot-of-students-performance-distribution",
    "title": "Take Home Ex 02: DataVis Makeover",
    "section": "3.1 Original Plot of Students’ Performance Distribution",
    "text": "3.1 Original Plot of Students’ Performance Distribution\nThe first requirement for Take-Home_Ex02 was to show the distribution of Singapore students’ performance in mathematics, reading, and science. Freddie made use of boxplots to illustrate the distribution of the scores as shown below. The boxplots for each of the subjects were segregated into different tabs, and the code chunk was “hidden” from the audience’s view unless the user clicks on “Show the code”.\n\n\n3.1.1 Positive Areas\nThe three box plots were clear and simple. It gave me (as audience) a clear view of the min-max distribution, interquartile range, median and outliers. The code chunk was also hidden so that it does not clutter the interface.\n\n\n3.1.2 Areas for Improvement\nJust from the boxplots that were displayed one at a time, it was difficult for me to comprehend what the graphs were trying to tell me. I would propose adding a histogram to supplement the boxplots to give a better visualisation to the audience on what the distributions look like. In addition, there are also merits to combine all three graphs on a single output, so that the audience can have an overview at one glance, instead of having to navigate through different tabs to compare the similarities and differences between the three subjects. Lastly, it will be useful to add annotations to the graphs to highlight the key points of the three graphs.\n\n3.1.2.1 Sketch\n\n\n\n\n3.1.3 Re-Modelled Distribution\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nDo align the x-axis of both histograms and boxplots so that the distributions are mapped correctly.\n\n\n\n\n\nmeanmathscore = rowMeans(select(stu_qqq_SG, PV1MATH : PV10MATH))\nstu_qqq_SG$meanmathscore &lt;- meanmathscore\nh1 &lt;- ggplot(data = stu_qqq_SG, \n             aes(x = meanmathscore)) +\n  geom_histogram(bins=20, \n                 boundary = 850,\n                 color=\"black\", \n                 fill=\"aquamarine\") + \n  coord_cartesian(xlim=c(100,850)) +\n  ggtitle(\"Distribution of Maths Scores\") +\n  theme_economist() & theme(plot.title = element_text(size = 8))\n\nb1 &lt;- ggplot(data = stu_qqq_SG,\n       aes (x = \"Math\", y = meanmathscore))+\n  geom_boxplot(width=0.2, notch=TRUE)+\n  stat_summary(geom = \"point\", fun.y= \"mean\", colour =\"aquamarine\", size=2)+\n  scale_y_continuous(limits = c(60,880), expand = c(0,0), breaks = seq(200, 800, by = 200))+\n  coord_flip() + \n  theme_economist() & theme(plot.title = element_text(size = 8))\n\nmeanreadscore = rowMeans(select(stu_qqq_SG, PV1READ : PV10READ))\nstu_qqq_SG$meanreadscore = meanreadscore\nh2 &lt;- ggplot(data = stu_qqq_SG, \n             aes(x = meanreadscore)) +\n  geom_histogram(bins=20, \n                 boundary = 850,\n                 color=\"black\", \n                 fill=\"cornsilk\") + \n  coord_cartesian(xlim=c(100,850)) +\n        annotate(\"text\",\n           x=300,\n           y=600,\n           color = \"red\",\n           label = \"There are more outliers\\nin Reading as compared to\\nMath and Science\", size = 2) +\n  ggtitle(\"Distribution of Reading Scores\") +\n  theme_economist() & theme(plot.title = element_text(size = 8))\n\nb2 &lt;- ggplot(data = stu_qqq_SG,\n       aes (x = \"Reading\", y = meanreadscore))+\n  geom_boxplot(width=0.2, notch=TRUE)+\n  stat_summary(geom = \"point\", fun.y= \"mean\", colour =\"cornsilk\", size=2)+\n  scale_y_continuous(limits = c(60,880), expand = c(0,0), breaks = seq(200, 800, by = 200))+\n  coord_flip() + \n  theme_economist() & theme(plot.title = element_text(size = 8))\n\nmeansciescore = rowMeans(select(stu_qqq_SG, PV1SCIE : PV10SCIE))\nstu_qqq_SG$meansciescore = meansciescore\nh3 &lt;- ggplot(data = stu_qqq_SG, \n             aes(x = meansciescore)) +\n  geom_histogram(bins=20, \n                 boundary = 850,\n                 color=\"black\", \n                 fill=\"darkolivegreen2\") + \n  coord_cartesian(xlim=c(100,850)) +\n  ggtitle(\"Distribution of Science Scores\") +\n  theme_economist() & theme(plot.title = element_text(size = 8))\n\nb3 &lt;- ggplot(data = stu_qqq_SG,\n       aes (x = \"Science\", y = meansciescore))+\n  geom_boxplot(width=0.2, position = \"dodge\")+\n  stat_summary(geom = \"point\", fun.y= \"mean\", colour =\"darkolivegreen2\", size=2)+\n  scale_y_continuous(limits = c(60,880), expand = c(0,0), breaks = seq(200, 800, by = 200)) +\n  coord_flip() +\n  theme_economist() & theme(plot.title = element_text(size = 8))\n\nplot_grid(h1, h2, h3, b1, b2, b3, ncol=3,align=\"v\",rel_heights=c(4,1.5),axis = 'lr')"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#original-plot-of-students-performance-by-gender",
    "href": "Take-Home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#original-plot-of-students-performance-by-gender",
    "title": "Take Home Ex 02: DataVis Makeover",
    "section": "3.2 Original Plot of Students’ Performance by Gender",
    "text": "3.2 Original Plot of Students’ Performance by Gender\nThe second requirement for Take-Home_Ex02 was to examine the relationship between Singapore students’ performances with schools, gender and socioeconomic status of the students. Similarly, Freddie made use of boxplots to illustrate the distribution of the scores by gender as shown below. The boxplots for each of the subjects were segregated into different tabs, and the code chunk was “hidden” from the audience’s view unless the user clicks on “Show the code”.\n\n\n3.2.1 Positive Areas\nOn top of those positive areas described above in 3.1.1 Positive Areas, a side-by-side comparison between the two genders allowed the audience to have a better visualisation of how male students performed against female students.\n\n\n3.2.2 Areas for Improvement\nSimilar to the points mentioned in 3.1.2 Areas for Improvement, it was difficult for me to comprehend what the boxplots were trying to tell me. I would propose adding a rainplot to supplement the boxplots to give a better visualisation to the audience on how the distributions differ from each other. In addition, combining all three graphs on a single output allows the audience to have a bird’s eye view instead of having to navigate through different tabs to compare the similarities and differences between the three subjects. Lastly, it will be useful to add annotations to the graphs to highlight the key points of the three graphs.\n\n3.2.2.1 Sketch of Alternative Design\n\n\n\n\n3.2.3 Re-Modelled Distribution\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nstu_qqq_SG$ST004D01T &lt;- replace(stu_qqq_SG$ST004D01T, stu_qqq_SG$ST004D01T == 1, \"Female\")\n\nstu_qqq_SG$ST004D01T &lt;- replace(stu_qqq_SG$ST004D01T, stu_qqq_SG$ST004D01T == 2, \"Male\")\n\ng1 &lt;- ggplot(stu_qqq_SG,\n       aes(x = ST004D01T, \n           y = meanmathscore)) +\n  labs(title = \"Distribution of Math Scores by Gender\", x = \"Gender\", y = \"Mean Math Score\") +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.1,\n               .width = 0,\n               scale = .8,\n               point_colour = NA,\n               slab_fill = \"aquamarine\") +\n  annotate(geom = \"text\",\n           x=2.8,\n           y=720,\n           label = \"Male students recorded peak frequency\\nat higher Math score\",\n           color = \"red\",\n           size = 2) +\n  geom_boxplot(width = .2,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.05, \n            binwidth = 4,\n            dotsize = .5) +\n    scale_y_continuous(limits = c(250,850), expand = c(0,0), breaks = seq(200, 800, by = 200)) +\n  coord_flip() +\n  theme_economist()\n\n\ng2 &lt;- ggplot(stu_qqq_SG,\n       aes(x = ST004D01T, \n           y = meanreadscore)) +\n  labs(title = \"Distribution of Reading Scores by Gender\", x = \"Gender\", y = \"Mean Reading Score\") +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.1,\n               .width = 0,\n               scale = .8,\n               point_colour = NA,\n               slab_fill = \"cornsilk\") +\n    annotate(geom = \"text\",\n           x=2.8,\n           y=680,\n           label = \"Female and Male students recorded peak frequency\\nat similar Reading score\",\n           color = \"red\",\n           size = 2) +\n  geom_boxplot(width = .2,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.05, \n            binwidth = 4,\n            dotsize = .5) +\n    scale_y_continuous(limits = c(250,850), expand = c(0,0), breaks = seq(200, 800, by = 200)) +\n  coord_flip() +\n  theme_economist()\n\ng3 &lt;- ggplot(stu_qqq_SG,\n       aes(x = ST004D01T, \n           y = meansciescore)) +\n  labs(title = \"Distribution of Science Scores by Gender\", x = \"Gender\", y = \"Mean Science Score\") +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.1,\n               .width = 0,\n               scale = .8,\n               point_colour = NA,\n               slab_fill = \"darkolivegreen2\") +\n      annotate(geom = \"text\",\n           x=2.8,\n           y=700,\n           label = \"Male students recorded peak frequency\\nat higher Science score\",\n           color = \"red\",\n           size = 2) +\n  geom_boxplot(width = .2,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.05,\n            binwidth = 4,\n            dotsize = .5) +\n    scale_y_continuous(limits = c(250,850), expand = c(0,0), breaks = seq(200, 800, by = 200)) +\n  coord_flip() +\n  theme_economist()\n\ngrid.arrange(g1, g2, g3)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608 - VISUAL ANALYTICS AND APPLICATIONS",
    "section": "",
    "text": "This website documents Roger’s learning journey through the Visual Analytics and Applications Jungle.\n\n\n\n\n\nIn this website, you will find my coursework prepared for this course. Let us navigate through this jungle and learn together."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html",
    "title": "In Class Exercise 04: Programming Interactive Data Visualisation with R",
    "section": "",
    "text": "In this chapter, we will learn how to create interactive data visualisation by using functions provided by ggiraph and plotlyr packages."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#tooltip-effect-with-tooltip-aesthetic",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#tooltip-effect-with-tooltip-aesthetic",
    "title": "In Class Exercise 04: Programming Interactive Data Visualisation with R",
    "section": "4.1 Tooltip effect with tooltip aesthetic",
    "text": "4.1 Tooltip effect with tooltip aesthetic\nBelow shows a typical code chunk to plot an interactive statistical graph by using ggiraph package. Notice that the code chunk consists of two parts. First, an ggplot object will be created. Next, girafe() of ggiraph will be used to create an interactive svg object.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    ### ID is chosen as the tooltip interactivity \n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\n### scale can also be made interactive, e.g. scale_fill_steps2_interactive\n\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n  ### svg : scalable vector graph (changing a png image to a spg format)\n)\n\nNotice that two steps are involved. First, an interactive version of ggplot2 geom (i.e. geom_dotplot_interactive()) will be used to create the basic graph. Then, girafe() will be used to generate an svg object to be displayed on an html page."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#displaying-multiple-information-on-tooltip",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#displaying-multiple-information-on-tooltip",
    "title": "In Class Exercise 04: Programming Interactive Data Visualisation with R",
    "section": "5.1 Displaying multiple information on tooltip",
    "text": "5.1 Displaying multiple information on tooltip\nThe content of the tooltip can be customised by including a list object as shown in the code chunk below.\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\n### need to specify where to extract the data for the tooltip; \\n is used to insert line breaks\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\nThe first three lines of codes in the code chunk create a new field called tooltip. At the same time, it populates text in ID and CLASS fields into the newly created field. Next, this newly created field is used as tooltip field as shown in the code of line 7."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#customising-tooltip-style",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#customising-tooltip-style",
    "title": "In Class Exercise 04: Programming Interactive Data Visualisation with R",
    "section": "6.1 Customising Tooltip style",
    "text": "6.1 Customising Tooltip style\nCode chunk below uses opts_tooltip() of ggiraph to customize tooltip rendering by add css declarations.\n\ntooltip_css &lt;- \"background-color:white; #&lt;&lt;\nfont-style:bold; color:black;\" #&lt;&lt;\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css)) #&lt;&lt;\n)                                        \n\nNotice that the background colour of the tooltip is black and the font colour is white and bold.\n\n\n\n\n\n\n\nRefer to Customizing girafe objects to learn more about how to customise ggiraph objects."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#displaying-statistics-on-tooltip",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#displaying-statistics-on-tooltip",
    "title": "In Class Exercise 04: Programming Interactive Data Visualisation with R",
    "section": "6.2 Displaying statistics on tooltip",
    "text": "6.2 Displaying statistics on tooltip\nCode chunk below shows an advanced way to customise tooltip. In this example, a function is used to compute 90% confident interval of the mean. The derived statistics are then displayed in the tooltip.\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n###calculating the mean, min-max scores on-the-fly using \"function\", hardcoding the descriptors, e.g. Mean maths scores, so that it is easier to read the tooltip\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#hover-effect-with-data_id-aesthetic",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#hover-effect-with-data_id-aesthetic",
    "title": "In Class Exercise 04: Programming Interactive Data Visualisation with R",
    "section": "6.3 Hover effect with data_id aesthetic",
    "text": "6.3 Hover effect with data_id aesthetic\nCode chunk below shows the second interactive feature of ggiraph, namely data_id.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS,\n        tooltip = CLASS), ### by adding a tooltip=class, you can also show the class when you hover over the selected points   \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)                                        \n\nInteractivity: Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over.\n\n\n\n\n\n\nNote that the default value of the hover css is hover_css = “fill:orange;”."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#styling-hover-effect",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#styling-hover-effect",
    "title": "In Class Exercise 04: Programming Interactive Data Visualisation with R",
    "section": "6.4 Styling hover effect",
    "text": "6.4 Styling hover effect\nIn the code chunk below, css codes are used to change the highlighting effect.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\nInteractivity: Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over.\n\n\n\n\n\n\nNote: Different from previous example, in this example the ccs customisation request are encoded directly."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#combining-tooltip-and-hover-effect",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#combining-tooltip-and-hover-effect",
    "title": "In Class Exercise 04: Programming Interactive Data Visualisation with R",
    "section": "6.5 Combining tooltip and hover effect",
    "text": "6.5 Combining tooltip and hover effect\nThere are time that we want to combine tooltip and hover effect on the interactive statistical graph as shown in the code chunk below.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\nInteractivity: Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over. At the same time, the tooltip will show the CLASS."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#click-effect-with-onclick",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#click-effect-with-onclick",
    "title": "In Class Exercise 04: Programming Interactive Data Visualisation with R",
    "section": "6.6 Click effect with onclick",
    "text": "6.6 Click effect with onclick\nonclick argument of ggiraph provides hotlink interactivity on the web.\nThe code chunk below shown an example of onclick.\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)                                        \n\nInteractivity: Web document link with a data object will be displayed on the web browser upon mouse click.\n\n\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\nNote that click actions must be a string column in the dataset containing valid javascript instructions."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#coordinated-multiple-views-with-ggiraph",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#coordinated-multiple-views-with-ggiraph",
    "title": "In Class Exercise 04: Programming Interactive Data Visualisation with R",
    "section": "6.7 Coordinated Multiple Views with ggiraph",
    "text": "6.7 Coordinated Multiple Views with ggiraph\nCoordinated multiple views methods has been implemented in the data visualisation below.\n\n\n\n\n\n\nNotice that when a data point of one of the dotplot is selected, the corresponding data point ID on the second data visualisation will be highlighted too.\nIn order to build a coordinated multiple views as shown in the example above, the following programming strategy will be used:\n\nAppropriate interactive functions of ggiraph will be used to create the multiple views.\npatchwork function of patchwork package will be used inside girafe function to create the interactive coordinated multiple views.\n\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID,\n        tooltip = tooltip), ### to include the tooltip to display the student name and class              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID,\n        tooltip = tooltip),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), ### to put the 2 graphs side-by side using \"print\", with \"code\" as a container (crosstalk function)\n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"), \n         opts_hover_inv(css = \"opacity:0.2;\") ### using css commands to control the fill and opacity\n         )\n       ) \n\nThe data_id aesthetic is critical to link observations between plots and the tooltip aesthetic is optional but nice to have when mouse over a point."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#creating-an-interactive-scatter-plot-plot_ly-method",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#creating-an-interactive-scatter-plot-plot_ly-method",
    "title": "In Class Exercise 04: Programming Interactive Data Visualisation with R",
    "section": "7.1 Creating an interactive scatter plot: plot_ly() method",
    "text": "7.1 Creating an interactive scatter plot: plot_ly() method\nThe tabset below shows an example a basic interactive plot created by using plot_ly().\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH) ### follows the java script for plot_ly()"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#working-with-visual-variable-plot_ly-method",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#working-with-visual-variable-plot_ly-method",
    "title": "In Class Exercise 04: Programming Interactive Data Visualisation with R",
    "section": "7.2 Working with visual variable: plot_ly() method",
    "text": "7.2 Working with visual variable: plot_ly() method\nIn the code chunk below, color argument is mapped to a qualitative visual variable (i.e. RACE).\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n### the legend box doubles up as a filter\n### we can also select groups of points by boxing them together\n### we can also use the lasso tool to choose points of irregular shapes (useful tool to use with Shiny)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#creating-an-interactive-scatter-plot-ggplotly-method",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#creating-an-interactive-scatter-plot-ggplotly-method",
    "title": "In Class Exercise 04: Programming Interactive Data Visualisation with R",
    "section": "7.3 Creating an interactive scatter plot: ggplotly() method",
    "text": "7.3 Creating an interactive scatter plot: ggplotly() method\nThe code chunk below plots an interactive scatter plot by using ggplotly().\n\nPlotCode\n\n\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\nNotice that the only extra line we need to include in the code chunk is ggplotly()."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#coordinated-multiple-views-with-plotly",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#coordinated-multiple-views-with-plotly",
    "title": "In Class Exercise 04: Programming Interactive Data Visualisation with R",
    "section": "7.4 Coordinated Multiple Views with plotly",
    "text": "7.4 Coordinated Multiple Views with plotly\nThe creation of a coordinated linked plot by using plotly involves three steps:\n\nhighlight_key() of plotly package is used as shared data.\ntwo scatterplots will be created by using ggplot2 functions.\nlastly, subplot() of plotly package is used to place them next to each other side-by-side.\n\n\nPlotCode\n\n\n\n\n\n\n\n\nClick on a data point of one of the scatterplot and see how the corresponding point on the other scatterplot is selected.\n\n\n\nd &lt;- highlight_key(exam_data) ### exam data becomes a object for highlight purposes\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))\n\n\n\n\n\n\n\nTip\n\n\n\nThing to learn from the code chunk:\n\nhighlight_key() simply creates an object of class crosstalk::SharedData.\nVisit this link to learn more about crosstalk."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#interactive-data-table-dt-package",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#interactive-data-table-dt-package",
    "title": "In Class Exercise 04: Programming Interactive Data Visualisation with R",
    "section": "8.1 Interactive Data Table: DT package",
    "text": "8.1 Interactive Data Table: DT package\n\nA wrapper of the JavaScript Library DataTables\nData objects in R can be rendered as HTML tables using the JavaScript library ‘DataTables’ (typically via R Markdown or Shiny).\n\n\nDT::datatable(exam_data, class = \"display compact\", style = \"bootstrap5\")"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#linked-brushing-crosstalk-method",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#linked-brushing-crosstalk-method",
    "title": "In Class Exercise 04: Programming Interactive Data Visualisation with R",
    "section": "8.2 Linked brushing: crosstalk method",
    "text": "8.2 Linked brushing: crosstalk method\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n### creates a datable table based on what plot_ly() has selected\n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d, class = \"display compact\", style = \"bootstrap5\"), \n                  widths = 5)  \n### data selected by plot_ly is passed over to cross talk, this allows the table\n### to display the records based on the selected obs from the plot_ly graphs     \n\n\n\n\n\n\n\nNote\n\n\n\nThings to learn from the code chunk:\n\nhighlight() is a function of plotly package. It sets a variety of options for brushing (i.e., highlighting) multiple plots. These options are primarily designed for linking multiple plotly graphs, and may not behave as expected when linking plotly to another htmlwidget package via crosstalk. In some cases, other htmlwidgets will respect these options, such as persistent selection in leaflet.\nbscols() is a helper function of crosstalk package. It makes it easy to put HTML elements side by side. It can be called directly from the console but is especially designed to work in an R Markdown document. Warning: This will bring in all of Bootstrap!."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#ggiraph",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#ggiraph",
    "title": "In Class Exercise 04: Programming Interactive Data Visualisation with R",
    "section": "9.1 ggiraph",
    "text": "9.1 ggiraph\nThis link provides online version of the reference guide and several useful articles. Use this link to download the pdf version of the reference guide.\n\nHow to Plot With Ggiraph\nInteractive map of France with ggiraph\nCustom interactive sunbursts with ggplot in R\nThis link provides code example on how ggiraph is used to interactive graphs for Swiss Olympians - the solo specialists."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#plotly-for-r",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#plotly-for-r",
    "title": "In Class Exercise 04: Programming Interactive Data Visualisation with R",
    "section": "9.2 plotly for R",
    "text": "9.2 plotly for R\n\nGetting Started with Plotly in R\nA collection of plotly R graphs are available via this link.\nCarson Sievert (2020) Interactive web-based data visualization with R, plotly, and shiny, Chapman and Hall/CRC is the best resource to learn plotly for R. The online version is available via this link\nPlotly R Figure Reference provides a comprehensive discussion of each visual representations.\nPlotly R Library Fundamentals is a good place to learn the fundamental features of Plotly’s R API.\nGetting Started\nVisit this link for a very interesting implementation of gganimate by your senior.\nBuilding an animation step-by-step with gganimate.\nCreating a composite gif with multiple gganimate panels"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex02/In-Class_Ex02.html#importing-the-data",
    "href": "In-Class_Ex/In-Class_Ex02/In-Class_Ex02.html#importing-the-data",
    "title": "In-Class Exercise 2: Tableau Visualisation",
    "section": "2.1 Importing the data",
    "text": "2.1 Importing the data\nThere are two ways to import the data. You can either drag the data source file into Tableau Window directly, or clicking on “file/ open/ data”"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex02/In-Class_Ex02.html#viewing-the-data",
    "href": "In-Class_Ex/In-Class_Ex02/In-Class_Ex02.html#viewing-the-data",
    "title": "In-Class Exercise 2: Tableau Visualisation",
    "section": "2.2 Viewing the Data",
    "text": "2.2 Viewing the Data\nWe can see that there are three sheets to choose from, which corresponds with the sheets in the data source file. We will first drag “Orders” into the main window.\n\n\n\n\n\nAfter that is done, there will be two tables being displayed, as shown below. On the left are the descriptors for the fields, while the right displays the observations."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex02/In-Class_Ex02.html#establishing-relationships-between-sheets",
    "href": "In-Class_Ex/In-Class_Ex02/In-Class_Ex02.html#establishing-relationships-between-sheets",
    "title": "In-Class Exercise 2: Tableau Visualisation",
    "section": "2.3 Establishing Relationships between Sheets",
    "text": "2.3 Establishing Relationships between Sheets\nTo establish a relationships between sheets, simply link them by dragging the sheets into the top window."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex02/In-Class_Ex02.html#tables",
    "href": "In-Class_Ex/In-Class_Ex02/In-Class_Ex02.html#tables",
    "title": "In-Class Exercise 2: Tableau Visualisation",
    "section": "3.1 Tables",
    "text": "3.1 Tables\n\n3.1.1 Creating Tables\nTo create a table, first drag “Region” into the Columns and “Year” into Rows. After which, just drag “Sales” into the table itself, as follows:\n\n\n\n\n\n\n\n3.1.2 Computing Totals\nTo compute total, simply go over to the “Analytics Panel”, click on “Totals” and drag it over to either “Column Grand Totals”, “Row Grand Totals” or both."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex02/In-Class_Ex02.html#graphs",
    "href": "In-Class_Ex/In-Class_Ex02/In-Class_Ex02.html#graphs",
    "title": "In-Class Exercise 2: Tableau Visualisation",
    "section": "3.2 Graphs",
    "text": "3.2 Graphs\nFirst, you can create a graph by dragging the following variables into the rows and columns.\n\n\n\n\n\n\n3.2.1 Adding Reference Line\nTo add a reference line, simply hover around the y-axis, right click and select “Add Reference Line”. Thereafter, on the pop-out box, you can select the various options for “Scope”, “Line” and “Formatting”.\n\n\n\n\n\nThis is what the per pane for “Scope” looks like:\n\n\n\n\n\nYou can also customise your own reference line by selecting “custom” under “Line/ Label”, and typing in “Avg = &lt;Value&gt;”.\n\n\n\n3.2.2 Adjusting Graph Lines\nUnder the Marks panel, you can select the “Colour” and “Size” for the graph lines.\n\n\n\n\n\n\n\n3.2.3 Incorporating Dual Axis Plot\nWe will demostrate how to incorporate a dual axis plot. First, we drag the “Profits” into the Rows. Notice that graphs for the profits will created in each output pane. Next, we will hover around the profit y-axis, right-click, and select “Dual Axis”.\n\n\nFrom the graph below, we notice that the scales for “Sum(Sales)” and “Sum(Profits)” are not synchronised. It may be difficult for readers to notice the different scales at first glance. Thus we will synchonise the axis by simplying hovering around the “Profit” y-axis, right-click and select “Synchronise Axis”.\n\n\n\n3.2.4 Editing Graph Colours from Ranged to Bi-Polar\nFirst, we will change the graph type of “Profits” from line to bar. Next, we will drag “Sum(Profits)” over to “Color” under the “Marks” panel, selecting 2 for “Stepped Color”.\n\n\n\n3.2.5 Formatting Axis Titles\nWe observe that the x-axis titles are being cut off, resulting in the first letter being displayed, and the remaining letters reflected as “…”. To overcome this, simply hover over “Month” in columns, right-click and select “Format”. From the “Format” panel that popped out, select how you want the dates to be reflected on the axis."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex02/In-Class_Ex02.html#things-about-tableau-you-must-know",
    "href": "In-Class_Ex/In-Class_Ex02/In-Class_Ex02.html#things-about-tableau-you-must-know",
    "title": "In-Class Exercise 2: Tableau Visualisation",
    "section": "6.1 Things about Tableau you must know!",
    "text": "6.1 Things about Tableau you must know!\n\nPolaris: A System for Query, Analysis,and Visualization of Multidimensional Relational Databases\nTableau Technology\nShow Me: Automatic Presentation for Visual Analysis\nWhitepaper: Visual Analysis for Everyone\nAnalytics Best Practices in Tableau"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex02/In-Class_Ex02.html#learning-tableau",
    "href": "In-Class_Ex/In-Class_Ex02/In-Class_Ex02.html#learning-tableau",
    "title": "In-Class Exercise 2: Tableau Visualisation",
    "section": "6.2 Learning Tableau",
    "text": "6.2 Learning Tableau\n\nGetting Started\nTableau Interface\nGetting Started with Visual Analytics\nFormatting\nThe Formatting Pane\nReference lines\nGetting Started with Data also self-learn the remaining videos under ’‘’Connecting to Data’’’\nGetting Started with Tableau Prep Builder. This is a brand-new product from Tableau designed to help everyone quickly and confidently combine, shape, and clean their data for analysis. You can learn more about Tableau Data Prep here. You are encouraged to view all the 12 videos under ’‘’Tableau Prep’’’."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04C.html",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04C.html",
    "title": "Hands-On_Ex04C: Visualising Uncertainty",
    "section": "",
    "text": "Visualising uncertainty is relatively new in statistical graphics. In this exercise, we will gain hands-on experience on creating statistical graphics for visualising uncertainty. By the end of this exercise, we will be able to:\n\nplot statistics error bars by using ggplot2,\nplot interactive error bars by combining ggplot2, plotly and DT,\ncreate advanced by using ggdist, and\ncreate hypothetical outcome plots (HOPs) by using ungeviz package."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04C.html#installing-and-loading-the-packages",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04C.html#installing-and-loading-the-packages",
    "title": "Hands-On_Ex04C: Visualising Uncertainty",
    "section": "2.1 Installing and loading the packages",
    "text": "2.1 Installing and loading the packages\nFor the purpose of this exercise, the following R packages will be used, they are:\n\ntidyverse, a family of R packages for data science process,\nplotly for creating interactive plot,\ngganimate for creating animation plot,\nDT for displaying interactive html table,\ncrosstalk for for implementing cross-widget interactions (currently, linked brushing and filtering), and\nggdist for visualising distribution and uncertainty.\n\n\ndevtools::install_github(\"wilkelab/ungeviz\")\n\n\npacman::p_load(ungeviz, plotly, crosstalk,\n               DT, ggdist, ggridges,\n               colorspace, gganimate, tidyverse)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04C.html#data-import",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04C.html#data-import",
    "title": "Hands-On_Ex04C: Visualising Uncertainty",
    "section": "2.2 Data import",
    "text": "2.2 Data import\nFor the purpose of this exercise, Exam_data.csv will be used.\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04C.html#plotting-standard-error-bars-of-point-estimates",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04C.html#plotting-standard-error-bars-of-point-estimates",
    "title": "Hands-On_Ex04C: Visualising Uncertainty",
    "section": "3.1 Plotting standard error bars of point estimates",
    "text": "3.1 Plotting standard error bars of point estimates\nNow we are ready to plot the standard error bars of mean maths score by race as shown below.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean maths score by rac\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04C.html#plotting-confidence-interval-of-point-estimates",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04C.html#plotting-confidence-interval-of-point-estimates",
    "title": "Hands-On_Ex04C: Visualising Uncertainty",
    "section": "3.2 Plotting confidence interval of point estimates",
    "text": "3.2 Plotting confidence interval of point estimates\nInstead of plotting the standard error bar of point estimates, we can also plot the confidence intervals of mean maths score by race.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE, -mean), \n        ymin=mean-1.96*se, \n        ymax=mean+1.96*se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x = \"Maths score\",\n       title = \"95% confidence interval of mean maths score by race\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04C.html#visualizing-the-uncertainty-of-point-estimates-with-interactive-error-bars",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04C.html#visualizing-the-uncertainty-of-point-estimates-with-interactive-error-bars",
    "title": "Hands-On_Ex04C: Visualising Uncertainty",
    "section": "3.3 Visualizing the uncertainty of point estimates with interactive error bars",
    "text": "3.3 Visualizing the uncertainty of point estimates with interactive error bars\nIn this section, we will learn how to plot interactive error bars for the 99% confidence interval of mean maths score by race as shown in the figure below.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nshared_df = SharedData$new(my_sum)\n\nbscols(widths = c(4,8),\n       ggplotly((ggplot(shared_df) +\n                   geom_errorbar(aes(\n                     x=reorder(RACE, -mean),\n                     ymin=mean-2.58*se, \n                     ymax=mean+2.58*se), \n                     width=0.2, \n                     colour=\"black\", \n                     alpha=0.9, \n                     size=0.5) +\n                   geom_point(aes(\n                     x=RACE, \n                     y=mean, \n                     text = paste(\"Race:\", `RACE`, \n                                  \"&lt;br&gt;N:\", `n`,\n                                  \"&lt;br&gt;Avg. Scores:\", round(mean, digits = 2),\n                                  \"&lt;br&gt;95% CI:[\", \n                                  round((mean-2.58*se), digits = 2), \",\",\n                                  round((mean+2.58*se), digits = 2),\"]\")),\n                     stat=\"identity\", \n                     color=\"red\", \n                     size = 1.5, \n                     alpha=1) + \n                   xlab(\"Race\") + \n                   ylab(\"Average Scores\") + \n                   theme_minimal() + \n                   theme(axis.text.x = element_text(\n                     angle = 45, vjust = 0.5, hjust=1)) +\n                   ggtitle(\"99% Confidence interval of average /&lt;br&gt;maths scores by race\")), \n                tooltip = \"text\"), \n       DT::datatable(shared_df, \n                     rownames = FALSE, \n                     class=\"compact\", \n                     width=\"100%\", \n                     options = list(pageLength = 10,\n                                    scrollX=T), \n                     colnames = c(\"No. of pupils\", \n                                  \"Avg Scores\",\n                                  \"Std Dev\",\n                                  \"Std Error\")) %&gt;%\n         formatRound(columns=c('mean', 'sd', 'se'),\n                     digits=2))"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04C.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04C.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods",
    "title": "Hands-On_Ex04C: Visualising Uncertainty",
    "section": "4.1 Visualizing the uncertainty of point estimates: ggdist methods",
    "text": "4.1 Visualizing the uncertainty of point estimates: ggdist methods\nIn the code chunk below, stat_pointinterval() of ggdist is used to build a visual for displaying distribution of maths scores by race.\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval() +\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThis function comes with many arguments, students are advised to read the syntax reference for more detail.\n\n\nFor example, in the code chunk below the following arguments are used:\n\n.width = 0.95\n.point = median\n.interval = qi\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = 0.95,\n  .point = median,\n  .interval = qi) +\n  labs(\n    title = \"Visualising confidence intervals of median math score\",\n    subtitle = \"Median Point + Multiple-interval plot\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04C.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-1",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04C.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-1",
    "title": "Hands-On_Ex04C: Visualising Uncertainty",
    "section": "4.2 Visualizing the uncertainty of point estimates: ggdist methods",
    "text": "4.2 Visualizing the uncertainty of point estimates: ggdist methods\n\n\n\n\n\n\nYour turn\n\n\n\nMakeover the plot on previous slide by showing 95% and 99% confidence intervals.\n\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval(\n    show.legend = FALSE) +   \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\nGentle advice: This function comes with many arguments, students are advised to read the syntax reference for more detail."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04C.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-2",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04C.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-2",
    "title": "Hands-On_Ex04C: Visualising Uncertainty",
    "section": "4.3 Visualizing the uncertainty of point estimates: ggdist methods",
    "text": "4.3 Visualizing the uncertainty of point estimates: ggdist methods\nIn the code chunk below, stat_gradientinterval() of ggdist is used to build a visual for displaying distribution of maths scores by race.\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"skyblue\",      \n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\")\n\n\n\n\n\n\n\n\nGentle advice: This function comes with many arguments, students are advised to read the syntax reference for more detail."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04A.html",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04A.html",
    "title": "Hands-On_Ex04A: Visualising Distribution",
    "section": "",
    "text": "Visualising distribution is not new in statistical analysis. In Hands-On_Ex01, we have shared that some of the popular statistical graphics methods for visualising distribution are histogram, probability density curve (pdf), boxplot, notch plot and violin plot and how they can be created by using ggplot2. In this exercise, we are going to share two relatively new statistical graphic methods for visualising distribution, namely ridgeline plot and raincloud plot by using ggplot2 and its extensions."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04A.html#installing-and-loading-the-packages",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04A.html#installing-and-loading-the-packages",
    "title": "Hands-On_Ex04A: Visualising Distribution",
    "section": "2.1 Installing and loading the packages",
    "text": "2.1 Installing and loading the packages\nFor the purpose of this exercise, the following R packages will be used, they are:\n\ntidyverse, a family of R packages for data science process,\nggridges, a ggplot2 extension specially designed for plotting ridgeline plots, and\nggdist for visualising distribution and uncertainty.\n\n\npacman::p_load(ggdist, ggridges, ggthemes,\n               colorspace, tidyverse)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04A.html#data-import",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04A.html#data-import",
    "title": "Hands-On_Ex04A: Visualising Distribution",
    "section": "2.2 Data import",
    "text": "2.2 Data import\nFor the purpose of this exercise, Exam_data.csv will be used.\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04A.html#plotting-ridgeline-graph-ggridges-method",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04A.html#plotting-ridgeline-graph-ggridges-method",
    "title": "Hands-On_Ex04A: Visualising Distribution",
    "section": "3.1 Plotting ridgeline graph: ggridges method",
    "text": "3.1 Plotting ridgeline graph: ggridges method\nThere are several ways to plot ridgeline plot with R. In this section, you will learn how to plot ridgeline plot by using ggridges package.\nggridges package provides two main geom to plot gridgeline plots, they are: geom_ridgeline() and geom_density_ridges(). The former takes height values directly to draw the ridgelines, and the latter first estimates data densities and then draws those using ridgelines.\nThe ridgeline plot below is plotted by using geom_density_ridges().\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04A.html#varying-fill-colors-along-the-x-axis",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04A.html#varying-fill-colors-along-the-x-axis",
    "title": "Hands-On_Ex04A: Visualising Distribution",
    "section": "3.2 Varying fill colors along the x axis",
    "text": "3.2 Varying fill colors along the x axis\nSometimes we would like to have the area under a ridgeline not filled with a single solid color but rather with colors that vary in some form along the x axis. This effect can be achieved by using either geom_ridgeline_gradient() or geom_density_ridges_gradient(). Both geoms work just like geom_ridgeline() and geom_density_ridges(), except that they allow for varying fill colors. However, they do not allow for alpha transparency in the fill. For technical reasons, we can have changing fill colors or transparency but not both.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04A.html#mapping-the-probabilities-directly-onto-colour",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04A.html#mapping-the-probabilities-directly-onto-colour",
    "title": "Hands-On_Ex04A: Visualising Distribution",
    "section": "3.3 Mapping the probabilities directly onto colour",
    "text": "3.3 Mapping the probabilities directly onto colour\nBeside providing additional geom objects to support the need to plot ridgeline plot, ggridges package also provides a stat function called stat_density_ridges() that replaces stat_density() of ggplot2.\nFigure below is plotted by mapping the probabilities calculated by using stat(ecdf) which represent the empirical cumulative density function for the distribution of English score.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nIt is important include the argument calc_ecdf = TRUE in stat_density_ridges()."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04A.html#ridgeline-plots-with-quantile-lines",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04A.html#ridgeline-plots-with-quantile-lines",
    "title": "Hands-On_Ex04A: Visualising Distribution",
    "section": "3.4 Ridgeline plots with quantile lines",
    "text": "3.4 Ridgeline plots with quantile lines\nBy using geom_density_ridges_gradient(), we can colour the ridgeline plot by quantile, via the calculated stat(quantile) aesthetic as shown in the figure below.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\nInstead of using number to define the quantiles, we can also specify quantiles by cut points such as 2.5% and 97.5% tails to colour the ridgeline plot as shown in the figure below.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04A.html#plotting-a-half-eye-graph",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04A.html#plotting-a-half-eye-graph",
    "title": "Hands-On_Ex04A: Visualising Distribution",
    "section": "4.1 Plotting a Half Eye graph",
    "text": "4.1 Plotting a Half Eye graph\nFirst, we will plot a Half-Eye graph by using stat_halfeye() of ggdist package.\nThis produces a Half Eye visualization, which is contains a half-density and a slab-interval.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04A.html#adding-the-boxplot-with-geom_boxplot",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04A.html#adding-the-boxplot-with-geom_boxplot",
    "title": "Hands-On_Ex04A: Visualising Distribution",
    "section": "4.2 Adding the boxplot with geom_boxplot()",
    "text": "4.2 Adding the boxplot with geom_boxplot()\nNext, we will add the second geometry layer using geom_boxplot() of ggplot2. This produces a narrow boxplot. We reduce the width and adjust the opacity.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04A.html#adding-the-dot-plots-with-stat_dots",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04A.html#adding-the-dot-plots-with-stat_dots",
    "title": "Hands-On_Ex04A: Visualising Distribution",
    "section": "4.3 Adding the Dot Plots with stat_dots()",
    "text": "4.3 Adding the Dot Plots with stat_dots()\nNext, we will add the third geometry layer using stat_dots() of ggdist package. This produces a half-dotplot, which is similar to a histogram that indicates the number of samples (number of dots) in each bin. We select side = “left” to indicate we want it on the left-hand side.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04A.html#finishing-touch",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04A.html#finishing-touch",
    "title": "Hands-On_Ex04A: Visualising Distribution",
    "section": "4.4 Finishing touch",
    "text": "4.4 Finishing touch\nLastly, coord_flip() of ggplot2 package will be used to flip the raincloud chart horizontally to give it the raincloud appearance. At the same time, theme_economist() of ggthemes package is used to give the raincloud chart a professional publishing standard look.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html",
    "title": "Hands On Exercise 03A: Programming Interactive Data Visualisation with R",
    "section": "",
    "text": "In this chapter, we will learn how to create interactive data visualisation by using functions provided by ggiraph and plotlyr packages."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html#tooltip-effect-with-tooltip-aesthetic",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html#tooltip-effect-with-tooltip-aesthetic",
    "title": "Hands On Exercise 03A: Programming Interactive Data Visualisation with R",
    "section": "4.1 Tooltip effect with tooltip aesthetic",
    "text": "4.1 Tooltip effect with tooltip aesthetic\nBelow shows a typical code chunk to plot an interactive statistical graph by using ggiraph package. Notice that the code chunk consists of two parts. First, an ggplot object will be created. Next, girafe() of ggiraph will be used to create an interactive svg object.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\nNotice that two steps are involved. First, an interactive version of ggplot2 geom (i.e. geom_dotplot_interactive()) will be used to create the basic graph. Then, girafe() will be used to generate an svg object to be displayed on an html page."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html#displaying-multiple-information-on-tooltip",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html#displaying-multiple-information-on-tooltip",
    "title": "Hands On Exercise 03A: Programming Interactive Data Visualisation with R",
    "section": "5.1 Displaying multiple information on tooltip",
    "text": "5.1 Displaying multiple information on tooltip\nThe content of the tooltip can be customised by including a list object as shown in the code chunk below.\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\nThe first three lines of codes in the code chunk create a new field called tooltip. At the same time, it populates text in ID and CLASS fields into the newly created field. Next, this newly created field is used as tooltip field as shown in the code of line 7."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html#customising-tooltip-style",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html#customising-tooltip-style",
    "title": "Hands On Exercise 03A: Programming Interactive Data Visualisation with R",
    "section": "6.1 Customising Tooltip style",
    "text": "6.1 Customising Tooltip style\nCode chunk below uses opts_tooltip() of ggiraph to customize tooltip rendering by add css declarations.\n\ntooltip_css &lt;- \"background-color:white; #&lt;&lt;\nfont-style:bold; color:black;\" #&lt;&lt;\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css)) #&lt;&lt;\n)                                        \n\nNotice that the background colour of the tooltip is black and the font colour is white and bold.\n\n\n\n\n\n\n\nRefer to Customizing girafe objects to learn more about how to customise ggiraph objects."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html#displaying-statistics-on-tooltip",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html#displaying-statistics-on-tooltip",
    "title": "Hands On Exercise 03A: Programming Interactive Data Visualisation with R",
    "section": "6.2 Displaying statistics on tooltip",
    "text": "6.2 Displaying statistics on tooltip\nCode chunk below shows an advanced way to customise tooltip. In this example, a function is used to compute 90% confident interval of the mean. The derived statistics are then displayed in the tooltip.\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html#hover-effect-with-data_id-aesthetic",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html#hover-effect-with-data_id-aesthetic",
    "title": "Hands On Exercise 03A: Programming Interactive Data Visualisation with R",
    "section": "6.3 Hover effect with data_id aesthetic",
    "text": "6.3 Hover effect with data_id aesthetic\nCode chunk below shows the second interactive feature of ggiraph, namely data_id.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)                                        \n\nInteractivity: Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over.\n\n\n\n\n\n\nNote that the default value of the hover css is hover_css = “fill:orange;”."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html#styling-hover-effect",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html#styling-hover-effect",
    "title": "Hands On Exercise 03A: Programming Interactive Data Visualisation with R",
    "section": "6.4 Styling hover effect",
    "text": "6.4 Styling hover effect\nIn the code chunk below, css codes are used to change the highlighting effect.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\nInteractivity: Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over.\n\n\n\n\n\n\nNote: Different from previous example, in this example the ccs customisation request are encoded directly."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html#combining-tooltip-and-hover-effect",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html#combining-tooltip-and-hover-effect",
    "title": "Hands On Exercise 03A: Programming Interactive Data Visualisation with R",
    "section": "6.5 Combining tooltip and hover effect",
    "text": "6.5 Combining tooltip and hover effect\nThere are time that we want to combine tooltip and hover effect on the interactive statistical graph as shown in the code chunk below.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\nInteractivity: Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over. At the same time, the tooltip will show the CLASS."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html#click-effect-with-onclick",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html#click-effect-with-onclick",
    "title": "Hands On Exercise 03A: Programming Interactive Data Visualisation with R",
    "section": "6.6 Click effect with onclick",
    "text": "6.6 Click effect with onclick\nonclick argument of ggiraph provides hotlink interactivity on the web.\nThe code chunk below shown an example of onclick.\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)                                        \n\nInteractivity: Web document link with a data object will be displayed on the web browser upon mouse click.\n\n\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\nNote that click actions must be a string column in the dataset containing valid javascript instructions."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html#coordinated-multiple-views-with-ggiraph",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html#coordinated-multiple-views-with-ggiraph",
    "title": "Hands On Exercise 03A: Programming Interactive Data Visualisation with R",
    "section": "6.7 Coordinated Multiple Views with ggiraph",
    "text": "6.7 Coordinated Multiple Views with ggiraph\nCoordinated multiple views methods has been implemented in the data visualisation below.\n\n\n\n\n\n\nNotice that when a data point of one of the dotplot is selected, the corresponding data point ID on the second data visualisation will be highlighted too.\nIn order to build a coordinated multiple views as shown in the example above, the following programming strategy will be used:\n\nAppropriate interactive functions of ggiraph will be used to create the multiple views.\npatchwork function of patchwork package will be used inside girafe function to create the interactive coordinated multiple views.\n\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\nThe data_id aesthetic is critical to link observations between plots and the tooltip aesthetic is optional but nice to have when mouse over a point."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html#creating-an-interactive-scatter-plot-plot_ly-method",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html#creating-an-interactive-scatter-plot-plot_ly-method",
    "title": "Hands On Exercise 03A: Programming Interactive Data Visualisation with R",
    "section": "7.1 Creating an interactive scatter plot: plot_ly() method",
    "text": "7.1 Creating an interactive scatter plot: plot_ly() method\nThe tabset below shows an example a basic interactive plot created by using plot_ly().\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html#working-with-visual-variable-plot_ly-method",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html#working-with-visual-variable-plot_ly-method",
    "title": "Hands On Exercise 03A: Programming Interactive Data Visualisation with R",
    "section": "7.2 Working with visual variable: plot_ly() method",
    "text": "7.2 Working with visual variable: plot_ly() method\nIn the code chunk below, color argument is mapped to a qualitative visual variable (i.e. RACE).\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\n\n\nNote\n\n\n\nNotice that the only extra line you need to include in the code chunk is ggplotly()."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html#coordinated-multiple-views-with-plotly",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html#coordinated-multiple-views-with-plotly",
    "title": "Hands On Exercise 03A: Programming Interactive Data Visualisation with R",
    "section": "7.3 Coordinated Multiple Views with plotly",
    "text": "7.3 Coordinated Multiple Views with plotly\nThe creation of a coordinated linked plot by using plotly involves three steps:\n\nhighlight_key() of plotly package is used as shared data.\ntwo scatterplots will be created by using ggplot2 functions.\nlastly, subplot() of plotly package is used to place them next to each other side-by-side.\n\n\nPlotCode\n\n\n\n\n\n\n\n\nClick on a data point of one of the scatterplot and see how the corresponding point on the other scatterplot is selected.\n\n\n\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))\n\n\n\n\n\n\n\nTip\n\n\n\nThing to learn from the code chunk:\nhighlight_key() simply creates an object of class crosstalk::SharedData. Visit this link to learn more about crosstalk."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html#interactive-data-table-dt-package",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html#interactive-data-table-dt-package",
    "title": "Hands On Exercise 03A: Programming Interactive Data Visualisation with R",
    "section": "8.1 Interactive Data Table: DT package",
    "text": "8.1 Interactive Data Table: DT package\n\nA wrapper of the JavaScript Library DataTables\nData objects in R can be rendered as HTML tables using the JavaScript library ‘DataTables’ (typically via R Markdown or Shiny).\n\n\nDT::datatable(exam_data, class = \"display compact\", style = \"bootstrap5\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html#linked-brushing-crosstalk-method",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html#linked-brushing-crosstalk-method",
    "title": "Hands On Exercise 03A: Programming Interactive Data Visualisation with R",
    "section": "8.2 Linked brushing: crosstalk method",
    "text": "8.2 Linked brushing: crosstalk method\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d, class = \"display compact\", style = \"bootstrap5\"), \n                  widths = 5)        \n\n\n\n\n\n\n\nNote\n\n\n\nThings to learn from the code chunk:\n\nhighlight() is a function of plotly package. It sets a variety of options for brushing (i.e., highlighting) multiple plots. These options are primarily designed for linking multiple plotly graphs, and may not behave as expected when linking plotly to another htmlwidget package via crosstalk. In some cases, other htmlwidgets will respect these options, such as persistent selection in leaflet.\nbscols() is a helper function of crosstalk package. It makes it easy to put HTML elements side by side. It can be called directly from the console but is especially designed to work in an R Markdown document. Warning: This will bring in all of Bootstrap!."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html#ggiraph",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html#ggiraph",
    "title": "Hands On Exercise 03A: Programming Interactive Data Visualisation with R",
    "section": "9.1 ggiraph",
    "text": "9.1 ggiraph\nThis link provides online version of the reference guide and several useful articles. Use this link to download the pdf version of the reference guide.\n\nHow to Plot With Ggiraph\nInteractive map of France with ggiraph\nCustom interactive sunbursts with ggplot in R\nThis link provides code example on how ggiraph is used to interactive graphs for Swiss Olympians - the solo specialists."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html#plotly-for-r",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03A.html#plotly-for-r",
    "title": "Hands On Exercise 03A: Programming Interactive Data Visualisation with R",
    "section": "9.2 plotly for R",
    "text": "9.2 plotly for R\n\nGetting Started with Plotly in R\nA collection of plotly R graphs are available via this link.\nCarson Sievert (2020) Interactive web-based data visualization with R, plotly, and shiny, Chapman and Hall/CRC is the best resource to learn plotly for R. The online version is available via this link\nPlotly R Figure Reference provides a comprehensive discussion of each visual representations.\nPlotly R Library Fundamentals is a good place to learn the fundamental features of Plotly’s R API.\nGetting Started\nVisit this link for a very interesting implementation of gganimate by your senior.\nBuilding an animation step-by-step with gganimate.\nCreating a composite gif with multiple gganimate panels"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html",
    "title": "Hands-On Exercise 01: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "",
    "text": "This chapter introduces the basic principles and essential components of ggplot2. At the same time, these components will be used to plot statistical graphics based on the principle of Layered Grammar of Graphics. By the end of this chapter, we will be able to apply the essential graphical elements provided by ggplot2 to create elegant and yet functional statistical graphics."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#install-and-launch-r-packages",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#install-and-launch-r-packages",
    "title": "Hands-On Exercise 01: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "2.1 Install and Launch R Packages",
    "text": "2.1 Install and Launch R Packages\nBefore we get started, it is important for us to ensure that the required R packages have been installed. If yes, we will load the R packages. If they have yet to be installed, we will install the R packages and load them onto R environment.\nThe code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, they will be launched into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#importing-the-data",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#importing-the-data",
    "title": "Hands-On Exercise 01: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "2.2 Importing the data",
    "text": "2.2 Importing the data\n\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package.\nreadr is one of the tidyverse package.\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\nYear end examination grades of a cohort of primary 3 students from a local school.\nThere are a total of seven attributes. Four of them are categorical data type and the other three are in continuous data type.\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE.\nThe continuous attributes are: MATHS, ENGLISH and SCIENCE."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#r-graphic-vs-ggplot",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#r-graphic-vs-ggplot",
    "title": "Hands-On Exercise 01: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "3.1 R Graphic VS ggplot",
    "text": "3.1 R Graphic VS ggplot\nFirst, let us compare how R Graphics, the core graphical functions of Base R and ggplot plot a simple histogram.\n\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\n\n\nAs you can see that the code chunk is relatively simple if R Graphics is used. Then, the question is why ggplot2 is recommended? The transferable skills from ggplot2 are not the idiosyncrasies of plotting syntax, but a powerful way of thinking about visualisation, as a way of mapping between variables and the visual properties of geometric objects that you can perceive."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#a-layered-grammar-of-graphics",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#a-layered-grammar-of-graphics",
    "title": "Hands-On Exercise 01: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "4.1 A Layered Grammar of Graphics",
    "text": "4.1 A Layered Grammar of Graphics\nggplot2 is an implementation of Leland Wilkinson’s Grammar of Graphics. Figure below shows the seven grammars of ggplot2.\n\n\n\nReference: Hadley Wickham (2010) “A layered grammar of graphics.” Journal of Computational and Graphical Statistics, vol. 19, no. 1, pp. 3–28.\n\n\nA short description of each building block are as follows:\n\nData: The dataset being plotted.\nAesthetics take attributes of the data and use them to influence visual characteristics, such as position, colours, size, shape, or transparency.\nGeometrics: The visual elements used for our data, such as point, bar or line.\nFacets split the data into subsets to create multiple variations of the same graph (paneling, multiple plots).\nStatistics, statiscal transformations that summarise data (e.g. mean, confidence intervals).\nCoordinate systems define the plane on which data are mapped on the graphic.\nThemes modify all non-data components of a plot, such as main title, sub-title, y-aixs title, or legend background."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#geometric-objects-geom_bar",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#geometric-objects-geom_bar",
    "title": "Hands-On Exercise 01: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "7.1 Geometric Objects: geom_bar",
    "text": "7.1 Geometric Objects: geom_bar\nThe code chunk below plots a bar chart by using geom_bar().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#geometric-objects-geom_dotplot",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#geometric-objects-geom_dotplot",
    "title": "Hands-On Exercise 01: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "7.2 Geometric Objects: geom_dotplot",
    "text": "7.2 Geometric Objects: geom_dotplot\nIn a dot plot, the width of a dot corresponds to the bin width (or maximum width, depending on the binning algorithm), and dots are stacked, with each dot representing one observation.\nIn the code chunk below, geom_dotplot() of ggplot2 is used to plot a dot plot.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\n\n\n\n\n\n\n\nNote:\n\nThe y scale is not very useful, in fact it is very misleading.\n\nThe code chunk below performs the following two steps:\n\nscale_y_continuous() is used to turn off the y-axis, and\nbinwidth argument is used to change the binwidth to 2.5.\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#geometric-objects-geom_histogram",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#geometric-objects-geom_histogram",
    "title": "Hands-On Exercise 01: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "7.3 Geometric Objects: geom_histogram()",
    "text": "7.3 Geometric Objects: geom_histogram()\nIn the code chunk below, geom_histogram() is used to create a simple histogram by using values in MATHS field of exam_data.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()       \n\n\n\n\n\n\n\n\nNote: The default bin is 30."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#modifying-a-geometric-object-by-changing-geom",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#modifying-a-geometric-object-by-changing-geom",
    "title": "Hands-On Exercise 01: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "7.4 Modifying a geometric object by changing geom()",
    "text": "7.4 Modifying a geometric object by changing geom()\nIn the code chunk below,\n\nbins argument is used to change the number of bins to 20,\nfill argument is used to shade the histogram with light blue color, and\ncolor argument is used to change the outline colour of the bars in black\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#modifying-a-geometric-object-by-changing-aes",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#modifying-a-geometric-object-by-changing-aes",
    "title": "Hands-On Exercise 01: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "7.5 Modifying a geometric object by changing aes()",
    "text": "7.5 Modifying a geometric object by changing aes()\nThe code chunk below changes the interior colour of the histogram (i.e. fill) by using sub-group of aesthetic().\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")\n\n\n\n\n\n\n\n\nNote: This approach can be used to colour, fill and alpha of the geometric."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#geometric-objects-geom-density",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#geometric-objects-geom-density",
    "title": "Hands-On Exercise 01: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "7.6 Geometric Objects: geom-density()",
    "text": "7.6 Geometric Objects: geom-density()\ngeom-density() computes and plots kernel density estimate, which is a smoothed version of the histogram.\nIt is a useful alternative to the histogram for continuous data that comes from an underlying smooth distribution.\nThe code below plots the distribution of Maths scores in a kernel density estimate plot.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()           \n\n\n\n\n\n\n\n\nThe code chunk below plots two kernel density lines by using colour or fill arguments of aes()\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#geometric-objects-geom_boxplot",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#geometric-objects-geom_boxplot",
    "title": "Hands-On Exercise 01: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "7.7 Geometric Objects: geom_boxplot",
    "text": "7.7 Geometric Objects: geom_boxplot\ngeom_boxplot() displays continuous value list. It visualises five summary statistics (the median, two hinges and two whiskers), and all “outlying” points individually.\nThe code chunk below plots boxplots by using geom_boxplot().\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()            \n\n\n\n\n\n\n\n\nNotches are used in box plots to help visually assess whether the medians of distributions differ. If the notches do not overlap, this is evidence that the medians are different.\nThe code chunk below plots the distribution of Maths scores by gender in notched plot instead of boxplot.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#geometric-objects-geom_violin",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#geometric-objects-geom_violin",
    "title": "Hands-On Exercise 01: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "7.8 Geometric Objects: geom_violin",
    "text": "7.8 Geometric Objects: geom_violin\ngeom_violin is designed for creating violin plot. Violin plots are a way of comparing multiple data distributions. With ordinary density curves, it is difficult to compare more than just a few distributions because the lines visually interfere with each other. With a violin plot, it’s easier to compare several distributions since they’re placed side by side.\nThe code below plot the distribution of Maths score by gender in violin plot.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nYou can also include the boxplot together with the violin plot for a better visual data representation."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#geometric-objects-geom_point",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#geometric-objects-geom_point",
    "title": "Hands-On Exercise 01: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "7.9 Geometric Objects: geom_point()",
    "text": "7.9 Geometric Objects: geom_point()\ngeom_point() is especially useful for creating scatterplot.\nThe code chunk below plots a scatterplot showing the Maths and English grades of pupils by using geom_point().\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#geom-objects-can-be-combined",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#geom-objects-can-be-combined",
    "title": "Hands-On Exercise 01: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "7.10 geom objects can be combined",
    "text": "7.10 geom objects can be combined\nThe code chunk below plots the data points on the boxplots by using both geom_boxplot() and geom_point().\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#working-with-stat",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#working-with-stat",
    "title": "Hands-On Exercise 01: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "8.1 Working with stat()",
    "text": "8.1 Working with stat()\nThe boxplots below are incomplete because the positions of the means were not shown.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot()"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#working-with-stat---the-stat_summary-method",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#working-with-stat---the-stat_summary-method",
    "title": "Hands-On Exercise 01: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "8.2 Working with stat - the stat_summary() method",
    "text": "8.2 Working with stat - the stat_summary() method\nThe code chunk below adds mean values by using stat_summary() function and overriding the default geom.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=4)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#working-with-stat---the-geom-method",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#working-with-stat---the-geom-method",
    "title": "Hands-On Exercise 01: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "8.3 Working with stat - the geom() method",
    "text": "8.3 Working with stat - the geom() method\nThe code chunk below adding mean values by using geom_() function and overriding the default stat.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             size=4)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot",
    "title": "Hands-On Exercise 01: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "8.4 Adding a best fit curve on a scatterplot?",
    "text": "8.4 Adding a best fit curve on a scatterplot?\nThe scatterplot below shows the relationship of Maths and English grades of pupils. The interpretability of this graph can be improved by adding a best fit curve. In the code chunk below, geom_smooth() is used to plot a best fit curve on the scatterplot.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(linewidth=0.5)\n\n\n\n\n\n\n\n\nNote: The default method used is loess.\nThe default smoothing method can be overridden as shown below.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#working-with-facet_wrap",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#working-with-facet_wrap",
    "title": "Hands-On Exercise 01: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "9.1 Working with facet_wrap()",
    "text": "9.1 Working with facet_wrap()\nfacet_wrap wraps a 1d sequence of panels into 2d. This is generally a better use of screen space than facet_grid because most displays are roughly rectangular.\nThe code chunk below plots a trellis plot using facet-wrap().\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#facet_grid-function",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#facet_grid-function",
    "title": "Hands-On Exercise 01: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "9.2 facet_grid() function",
    "text": "9.2 facet_grid() function\nfacet_grid() forms a matrix of panels defined by row and column facetting variables. It is most useful when you have two discrete variables, and all combinations of the variables exist in the data.\nThe code chunk below plots a trellis plot using facet_grid().\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#working-with-coordinate",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#working-with-coordinate",
    "title": "Hands-On Exercise 01: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "10.1 Working with Coordinate",
    "text": "10.1 Working with Coordinate\nBy the default, the bar chart of ggplot2 is in vertical form.\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\n\n\nThe code chunk below flips the horizontal bar chart into vertical bar chart by using coord_flip().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#changing-the-y--and-x-axis-range",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#changing-the-y--and-x-axis-range",
    "title": "Hands-On Exercise 01: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "10.2 Changing the y- and x-axis range",
    "text": "10.2 Changing the y- and x-axis range\nThe scatterplot on the right is slightly misleading because the y-aixs and x-axis range are not equal.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, size=0.5)\n\n\n\n\n\n\n\n\nThe code chunk below fixed both the y-axis and x-axis range from 0-100.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#working-with-theme",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#working-with-theme",
    "title": "Hands-On Exercise 01: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "11.1 Working with theme",
    "text": "11.1 Working with theme\nThe code chunk below plot a horizontal bar chart using theme_gray().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()\n\n\n\n\n\n\n\n\nA horizontal bar chart plotted using theme_classic().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()\n\n\n\n\n\n\n\n\nA horizontal bar chart plotted using theme_minimal().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "about.html#about-this-site",
    "href": "about.html#about-this-site",
    "title": "About",
    "section": "About this site",
    "text": "About this site\nThis is the work of a student pursuing Masters in Information Technology at Singapore Management University.\nWhen not working/ studying, Roger enjoys spending time with family and friends."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#installing-and-loading-the-required-libraries",
    "href": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#installing-and-loading-the-required-libraries",
    "title": "Hands-On Exercise 02 : Beyond ggplot2 Fundamentals",
    "section": "2.1 Installing and loading the required libraries",
    "text": "2.1 Installing and loading the required libraries\nIn this chapter, beside tidyverse, four R packages will be used. They are:\n\nggrepel: an R package provides geoms for ggplot2 to repel overlapping text labels.\nggthemes: an R package provides some extra themes, geoms, and scales for ‘ggplot2’.\nhrbrthemes: an R package provides typography-centric themes and theme components for ggplot2.\npatchwork: an R package for preparing composite figure created using ggplot2.\n\nCode chunk below will be used to check if these packages have been installed and also will load them onto the working R environment.\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#importing-data",
    "href": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#importing-data",
    "title": "Hands-On Exercise 02 : Beyond ggplot2 Fundamentals",
    "section": "2.2 Importing data",
    "text": "2.2 Importing data\nFor the purpose of this chapter, a data file called Exam_data will be used. It consists of year end examination grades of a cohort of primary 3 students from a local school. It is in csv file format.\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package. readr is one of the tidyverse package.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nThere are a total of seven attributes in the exam_data tibble data frame. Four of them are categorical data type and the other three are in continuous data type.\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE.\nThe continuous attributes are: MATHS, ENGLISH and SCIENCE."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#working-with-ggrepel",
    "href": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#working-with-ggrepel",
    "title": "Hands-On Exercise 02 : Beyond ggplot2 Fundamentals",
    "section": "3.1 Working with ggrepel",
    "text": "3.1 Working with ggrepel\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#working-with-ggtheme-package",
    "href": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#working-with-ggtheme-package",
    "title": "Hands-On Exercise 02 : Beyond ggplot2 Fundamentals",
    "section": "4.1 Working with ggtheme package",
    "text": "4.1 Working with ggtheme package\nggthemes provides ‘ggplot2’ themes that replicate the look of plots by Edward Tufte, Stephen Few, Fivethirtyeight, The Economist, ‘Stata’, ‘Excel’, and The Wall Street Journal, among others.\nIn the example below, The Economist theme is used.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"aquamarine\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\nIt also provides some extra geoms and scales for ‘ggplot2’. Consult this vignette to learn more."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#working-with-hrbthems-package",
    "href": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#working-with-hrbthems-package",
    "title": "Hands-On Exercise 02 : Beyond ggplot2 Fundamentals",
    "section": "4.2 Working with hrbthems package",
    "text": "4.2 Working with hrbthems package\nhrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"aquamarine\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\n\n\n\n\n\n\n\n\n\nWhat can we learn from the code chunk above:\n\n\n\n\naxis_title_size argument is used to increase the font size of the axis title to 18,\nbase_size argument is used to increase the default axis label to 15, and\ngrid argument is used to remove the x-axis grid lines."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#creating-composite-graphics-patchwork-methods",
    "href": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#creating-composite-graphics-patchwork-methods",
    "title": "Hands-On Exercise 02 : Beyond ggplot2 Fundamentals",
    "section": "5.1 Creating Composite Graphics: patchwork methods",
    "text": "5.1 Creating Composite Graphics: patchwork methods\nThere are several ggplot2 extension’s functions support the needs to prepare composite figure by combining several graphs such as grid.arrange() of gridExtra package and plot_grid() of cowplot package. In this section, I am going to shared with you an ggplot2 extension called patchwork  which is specially designed for combining separate ggplot2 graphs into a single figure.\nPatchwork package has a very simple syntax where we can create layouts super easily. Here’s the general syntax that combines:\n\nTwo-Column Layout using the Plus Sign +.\nParenthesis () to create a subplot group.\nTwo-Row Layout using the Division Sign /"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#combining-two-ggplot2-graphs",
    "href": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#combining-two-ggplot2-graphs",
    "title": "Hands-On Exercise 02 : Beyond ggplot2 Fundamentals",
    "section": "5.2 Combining two ggplot2 graphs",
    "text": "5.2 Combining two ggplot2 graphs\nFigure in the tabset below shows a composite of two histograms created using patchwork. Note how simple the syntax used to create the plot!\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\np1 + p2"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#combining-three-ggplot2-graphs",
    "href": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#combining-three-ggplot2-graphs",
    "title": "Hands-On Exercise 02 : Beyond ggplot2 Fundamentals",
    "section": "5.3 Combining three ggplot2 graphs",
    "text": "5.3 Combining three ggplot2 graphs\nWe can plot more complex composite by using appropriate operators. For example, the composite figure below is plotted by using:\n\n“|” operator to stack two ggplot2 graphs,\n“/” operator to place the plots beside each other,\n“()” operator the define the sequence of the plotting.\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#creating-figure-with-insert",
    "href": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#creating-figure-with-insert",
    "title": "Hands-On Exercise 02 : Beyond ggplot2 Fundamentals",
    "section": "5.4 Creating figure with insert",
    "text": "5.4 Creating figure with insert\nBeside providing functions to place plots next to each other based on the provided layout. With inset_element() of patchwork, we can place one or several plots or graphic elements freely on top or below another plot.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "href": "Hands-On_Ex/Hands-On_Ex02/Hands-On_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "title": "Hands-On Exercise 02 : Beyond ggplot2 Fundamentals",
    "section": "5.5 Creating a composite figure by using patchwork and ggtheme",
    "text": "5.5 Creating a composite figure by using patchwork and ggtheme\nFigure below is created by combining patchwork and theme_economist() of ggthemes package discussed earlier.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist() & theme(plot.title = element_text(size = 8))"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03B.html",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03B.html",
    "title": "Hands On Exercise 03B: Programming Animated Statistical Graphics with R",
    "section": "",
    "text": "When telling a visually-driven data story, animated graphics tends to attract the interest of the audience and make deeper impression than static graphics. In this chapter, we will learn how to create animated data visualisation by using gganimate and plotly r packages. At the same time, we will also learn how to (i) reshape data by using tidyr package, and (ii) process, wrangle and transform data by using dplyr package.\n\n\nWhen creating animations, the plot does not actually move. Instead, many individual plots are built and then stitched together as movie frames, just like an old-school flip book or cartoon. Each frame is a different plot when conveying motion, which is built using some relevant subset of the aggregate data. The subset drives the flow of the animation when stitched back together.\n\n\n\n\nBefore we dive into the steps for creating an animated statistical graph, it’s important to understand some of the key concepts and terminology related to this type of visualization.\n\nFrame: In an animated line graph, each frame represents a different point in time or a different category. When the frame changes, the data points on the graph are updated to reflect the new data.\nAnimation Attributes: The animation attributes are the settings that control how the animation behaves. For example, you can specify the duration of each frame, the easing function used to transition between frames, and whether to start the animation from the current frame or from the beginning.\n\n\n\n\n\n\n\nTip\n\n\n\nBefore we start making animated graphs, we should first ask ourselves: Does it makes sense to go through the effort? If we are conducting an exploratory data analysis, a animated graphic may not be worth the time investment. However, if we are giving a presentation, a few well-placed animated graphics can help an audience connect with our topic remarkably better than static counterparts."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03B.html#basic-concepts-of-animation",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03B.html#basic-concepts-of-animation",
    "title": "Hands On Exercise 03B: Programming Animated Statistical Graphics with R",
    "section": "",
    "text": "When creating animations, the plot does not actually move. Instead, many individual plots are built and then stitched together as movie frames, just like an old-school flip book or cartoon. Each frame is a different plot when conveying motion, which is built using some relevant subset of the aggregate data. The subset drives the flow of the animation when stitched back together."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03B.html#terminology",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03B.html#terminology",
    "title": "Hands On Exercise 03B: Programming Animated Statistical Graphics with R",
    "section": "",
    "text": "Before we dive into the steps for creating an animated statistical graph, it’s important to understand some of the key concepts and terminology related to this type of visualization.\n\nFrame: In an animated line graph, each frame represents a different point in time or a different category. When the frame changes, the data points on the graph are updated to reflect the new data.\nAnimation Attributes: The animation attributes are the settings that control how the animation behaves. For example, you can specify the duration of each frame, the easing function used to transition between frames, and whether to start the animation from the current frame or from the beginning.\n\n\n\n\n\n\n\nTip\n\n\n\nBefore we start making animated graphs, we should first ask ourselves: Does it makes sense to go through the effort? If we are conducting an exploratory data analysis, a animated graphic may not be worth the time investment. However, if we are giving a presentation, a few well-placed animated graphics can help an audience connect with our topic remarkably better than static counterparts."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03B.html#loading-the-r-packages",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03B.html#loading-the-r-packages",
    "title": "Hands On Exercise 03B: Programming Animated Statistical Graphics with R",
    "section": "2.1 Loading the R packages",
    "text": "2.1 Loading the R packages\nFirst, write a code chunk to check, install and load the following R packages:\n\nplotly, R library for plotting interactive statistical graphs.\ngganimate, an ggplot extension for creating animated statistical graphs.\ngifski converts video frames to GIF animations using pngquant’s fancy features for efficient cross-frame palettes and temporal dithering. It produces animated GIFs that use thousands of colors per frame.\ngapminder: An excerpt of the data available at Gapminder.org. We just want to use its country_colors scheme.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\n\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03B.html#importing-data",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03B.html#importing-data",
    "title": "Hands On Exercise 03B: Programming Animated Statistical Graphics with R",
    "section": "2.2 Importing Data",
    "text": "2.2 Importing Data\nIn this chapter, the Data worksheet from GlobalPopulation Excel workbook will be used.\nWrite a code chunk to import Data worksheet from GlobalPopulation Excel workbook by using appropriate R package from tidyverse family.\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_each_(funs(factor(.)), col) %&gt;%\n  mutate(Year = as.integer(Year))\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nread_xls() of readxl package is used to import the Excel worksheet.\nmutate_each_() of dplyr package is used to convert all character data type into factor.\nmutate of dplyr package is used to convert data values of Year field into integer.\n\n\n\nUnfortunately, mutate_each_() was deprecated in dplyr 0.7.0. and funs() was deprecated in dplyr 0.8.0. In view of this, we will re-write the code by using mutate_at() as shown in the code chunk below.\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_at(col, as.factor) %&gt;%\n  mutate(Year = as.integer(Year))\n\nInstead of using mutate_at(), across() can be used to derive the same outputs.\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate(across(col, as.factor)) %&gt;%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03B.html#building-a-static-population-bubble-plot",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03B.html#building-a-static-population-bubble-plot",
    "title": "Hands On Exercise 03B: Programming Animated Statistical Graphics with R",
    "section": "3.1 Building a static population bubble plot",
    "text": "3.1 Building a static population bubble plot\nIn the code chunk below, the basic ggplot2 functions are used to create a static bubble plot.\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young')"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03B.html#building-the-animated-bubble-plot",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03B.html#building-the-animated-bubble-plot",
    "title": "Hands On Exercise 03B: Programming Animated Statistical Graphics with R",
    "section": "3.2 Building the animated bubble plot",
    "text": "3.2 Building the animated bubble plot\nIn the code chunk below,\n\ntransition_time() of gganimate is used to create transition through distinct states in time (i.e. Year).\nease_aes() is used to control easing of aesthetics. The default is linear. Other methods are: quadratic, cubic, quartic, quintic, sine, circular, exponential, elastic, back, and bounce.\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')          \n\nThe animated bubble chart"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03B.html#building-an-animated-bubble-plot-ggplotly-method",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03B.html#building-an-animated-bubble-plot-ggplotly-method",
    "title": "Hands On Exercise 03B: Programming Animated Statistical Graphics with R",
    "section": "4.1 Building an animated bubble plot: ggplotly() method",
    "text": "4.1 Building an animated bubble plot: ggplotly() method\nIn this sub-section, you will learn how to create an animated bubble plot by using ggplotly() method.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\n\n\nNote\n\n\n\n\nAppropriate ggplot2 functions are used to create a static bubble plot. The output is then saved as an R object called gg.\nggplotly() is then used to convert the R graphic object into an animated svg object.\n\n\n\n\n\n\nNotice that although show.legend = FALSE argument was used, the legend still appears on the plot. To overcome this problem, theme(legend.position='none') should be used as shown in the plot and code chunk below.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03B.html#building-an-animated-bubble-plot-plot_ly-method",
    "href": "Hands-On_Ex/Hands-On_Ex03/Hands-On_Ex03B.html#building-an-animated-bubble-plot-plot_ly-method",
    "title": "Hands On Exercise 03B: Programming Animated Statistical Graphics with R",
    "section": "4.2 Building an animated bubble plot: plot_ly() method",
    "text": "4.2 Building an animated bubble plot: plot_ly() method\nIn this sub-section, you will learn how to create an animated bubble plot by using plot_ly() method.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html",
    "title": "Hands-On_Ex04B: Visual Statistical Analysis",
    "section": "",
    "text": "In this hands-on exercise, we will gain hands-on experience on using:\n\nggstatsplot package to create visual graphics with rich statistical information,\nperformance package to visualise model diagnostics, and\nparameters package to visualise model parameters"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#installing-and-launching-r-packages",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#installing-and-launching-r-packages",
    "title": "Hands-On_Ex04B: Visual Statistical Analysis",
    "section": "3.1 Installing and launching R packages",
    "text": "3.1 Installing and launching R packages\nIn this exercise, ggstatsplot and tidyverse will be used.\n\npacman::p_load(ggstatsplot, tidyverse)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#importing-data",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#importing-data",
    "title": "Hands-On_Ex04B: Visual Statistical Analysis",
    "section": "3.2 Importing data",
    "text": "3.2 Importing data\nFor the purpose of this exercise, Exam_data.csv will be used.\n\nexam &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#one-sample-test-gghistostats-method",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#one-sample-test-gghistostats-method",
    "title": "Hands-On_Ex04B: Visual Statistical Analysis",
    "section": "3.3 One-sample test: gghistostats() method",
    "text": "3.3 One-sample test: gghistostats() method\nIn the code chunk below, gghistostats() is used to to build an visual of one-sample test on English scores.\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n\n\n\n\n\n\n\n\nDefault information: - statistical details - Bayes Factor - sample sizes - distribution summary"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#unpacking-the-bayes-factor",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#unpacking-the-bayes-factor",
    "title": "Hands-On_Ex04B: Visual Statistical Analysis",
    "section": "3.4 Unpacking the Bayes Factor",
    "text": "3.4 Unpacking the Bayes Factor\n\nA Bayes factor is the ratio of the likelihood of one particular hypothesis to the likelihood of another. It can be interpreted as a measure of the strength of evidence in favor of one theory among two competing theories.\nThat’s because the Bayes factor gives us a way to evaluate the data in favor of a null hypothesis, and to use external information to do so. It tells us what the weight of the evidence is in favor of a given hypothesis.\nWhen we are comparing two hypotheses, H1 (the alternate hypothesis) and H0 (the null hypothesis), the Bayes Factor is often written as B10. It can be defined mathematically as\n\nThe Schwarz criterion is one of the easiest ways to calculate rough approximation of the Bayes Factor."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#how-to-interpret-bayes-factor",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#how-to-interpret-bayes-factor",
    "title": "Hands-On_Ex04B: Visual Statistical Analysis",
    "section": "3.5 How to interpret Bayes Factor",
    "text": "3.5 How to interpret Bayes Factor\nA Bayes Factor can be any positive number. One of the most common interpretations is this one—first proposed by Harold Jeffereys (1961) and slightly modified by Lee and Wagenmakers in 2013:"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#two-sample-mean-test-ggbetweenstats",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#two-sample-mean-test-ggbetweenstats",
    "title": "Hands-On_Ex04B: Visual Statistical Analysis",
    "section": "3.6 Two-sample mean test: ggbetweenstats()",
    "text": "3.6 Two-sample mean test: ggbetweenstats()\nIn the code chunk below, ggbetweenstats() is used to build a visual for two-sample mean test of Maths scores by gender.\n\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\nDefault information: - statistical details - Bayes Factor - sample sizes - distribution summary"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#oneway-anova-test-ggbetweenstats-method",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#oneway-anova-test-ggbetweenstats-method",
    "title": "Hands-On_Ex04B: Visual Statistical Analysis",
    "section": "3.7 Oneway ANOVA Test: ggbetweenstats() method",
    "text": "3.7 Oneway ANOVA Test: ggbetweenstats() method\nIn the code chunk below, ggbetweenstats() is used to build a visual for One-way ANOVA test on English score by race.\n\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\n\n“ns” → only non-significant\n“s” → only significant\n“all” → everything\n\n\n3.7.1 ggbetweenstats - Summary of tests"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#significant-test-of-correlation-ggscatterstats",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#significant-test-of-correlation-ggscatterstats",
    "title": "Hands-On_Ex04B: Visual Statistical Analysis",
    "section": "3.8 Significant Test of Correlation: ggscatterstats()",
    "text": "3.8 Significant Test of Correlation: ggscatterstats()\nIn the code chunk below, ggscatterstats() is used to build a visual for Significant Test of Correlation between Maths scores and English scores.\n\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#significant-test-of-association-dependence-ggbarstats-methods",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#significant-test-of-association-dependence-ggbarstats-methods",
    "title": "Hands-On_Ex04B: Visual Statistical Analysis",
    "section": "3.9 Significant Test of Association (Dependence) : ggbarstats() methods",
    "text": "3.9 Significant Test of Association (Dependence) : ggbarstats() methods\nIn the code chunk below, the Maths scores is binned into a 4-class variable by using cut().\n\nexam1 &lt;- exam %&gt;% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\n\nIn this code chunk below ggbarstats() is used to build a visual for Significant Test of Association\n\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#installing-and-loading-the-required-libraries",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#installing-and-loading-the-required-libraries",
    "title": "Hands-On_Ex04B: Visual Statistical Analysis",
    "section": "5.1 Installing and loading the required libraries",
    "text": "5.1 Installing and loading the required libraries\nIn this exercise, readxl, performance, parameters and see will be used.\n\npacman::p_load(readxl, performance, parameters, see)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#importing-excel-file-readxl-methods",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#importing-excel-file-readxl-methods",
    "title": "Hands-On_Ex04B: Visual Statistical Analysis",
    "section": "5.2 Importing Excel file: readxl methods",
    "text": "5.2 Importing Excel file: readxl methods\nIn the code chunk below, read_xls() of readxl package is used to import the data worksheet of ToyotaCorolla.xls workbook into R.\n\ncar_resale &lt;- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;         &lt;dbl&gt;  &lt;dbl&gt;\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period &lt;dbl&gt;, HP_Bin &lt;chr&gt;, CC_bin &lt;chr&gt;,\n#   Doors &lt;dbl&gt;, Gears &lt;dbl&gt;, Cylinders &lt;dbl&gt;, Fuel_Type &lt;chr&gt;, Color &lt;chr&gt;,\n#   Met_Color &lt;dbl&gt;, Automatic &lt;dbl&gt;, Mfr_Guarantee &lt;dbl&gt;,\n#   BOVAG_Guarantee &lt;dbl&gt;, ABS &lt;dbl&gt;, Airbag_1 &lt;dbl&gt;, Airbag_2 &lt;dbl&gt;,\n#   Airco &lt;dbl&gt;, Automatic_airco &lt;dbl&gt;, Boardcomputer &lt;dbl&gt;, CD_Player &lt;dbl&gt;,\n#   Central_Lock &lt;dbl&gt;, Powered_Windows &lt;dbl&gt;, Power_Steering &lt;dbl&gt;, …\n\n\nNotice that the output object car_resale is a tibble data frame."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#multiple-regression-model-using-lm",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#multiple-regression-model-using-lm",
    "title": "Hands-On_Ex04B: Visual Statistical Analysis",
    "section": "5.3 Multiple Regression Model using lm()",
    "text": "5.3 Multiple Regression Model using lm()\nThe code chunk below is used to calibrate a multiple linear regression model by using lm() of Base Stats of R.\n\nmodel &lt;- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#model-diagnostic-checking-for-multicolinearity",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#model-diagnostic-checking-for-multicolinearity",
    "title": "Hands-On_Ex04B: Visual Statistical Analysis",
    "section": "5.4 Model Diagnostic: checking for multicolinearity",
    "text": "5.4 Model Diagnostic: checking for multicolinearity\nIn the code chunk, check_collinearity() of performance package.\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#model-diagnostic-checking-normality-assumption",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#model-diagnostic-checking-normality-assumption",
    "title": "Hands-On_Ex04B: Visual Statistical Analysis",
    "section": "5.5 Model Diagnostic: checking normality assumption",
    "text": "5.5 Model Diagnostic: checking normality assumption\nIn the code chunk, check_normality() of performance package.\n\nmodel1 &lt;- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\n\ncheck_n &lt;- check_normality(model1)\n\n\nplot(check_n)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#model-diagnostic-check-model-for-homogeneity-of-variances",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#model-diagnostic-check-model-for-homogeneity-of-variances",
    "title": "Hands-On_Ex04B: Visual Statistical Analysis",
    "section": "5.6 Model Diagnostic: Check model for homogeneity of variances",
    "text": "5.6 Model Diagnostic: Check model for homogeneity of variances\nIn the code chunk, check_heteroscedasticity() of performance package.\n\ncheck_h &lt;- check_heteroscedasticity(model1)\n\n\nplot(check_h)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#model-diagnostic-complete-check",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#model-diagnostic-complete-check",
    "title": "Hands-On_Ex04B: Visual Statistical Analysis",
    "section": "5.7 Model Diagnostic: Complete check",
    "text": "5.7 Model Diagnostic: Complete check\nWe can also perform the complete by using check_model().\n\ncheck_model(model1)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#visualising-regression-parameters-see-methods",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#visualising-regression-parameters-see-methods",
    "title": "Hands-On_Ex04B: Visual Statistical Analysis",
    "section": "5.8 Visualising Regression Parameters: see methods",
    "text": "5.8 Visualising Regression Parameters: see methods\nIn the code below, plot() of see package and parameters() of parameters package is used to visualise the parameters of a regression model.\n\nplot(parameters(model1))"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#visualising-regression-parameters-ggcoefstats-methods",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04B.html#visualising-regression-parameters-ggcoefstats-methods",
    "title": "Hands-On_Ex04B: Visual Statistical Analysis",
    "section": "5.9 Visualising Regression Parameters: ggcoefstats() methods",
    "text": "5.9 Visualising Regression Parameters: ggcoefstats() methods\nIn the code below, ggcoefstats() of ggstatsplot package to visualise the parameters of a regression model.\n\nggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04D.html",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04D.html",
    "title": "Hands-On_Ex04D: Funnel Plots for Fair Comparisons",
    "section": "",
    "text": "Funnel plot is a specially designed data visualisation for conducting unbiased comparison between outlets, stores or business entities. By the end of this exercise, we will gain hands-on experience on:\n\nplotting funnel plots by using funnelPlotR package,\nplotting static funnel plot by using ggplot2 package, and\nplotting interactive funnel plot by using both plotly R and ggplot2 packages."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04D.html#installing-and-loading-the-packages",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04D.html#installing-and-loading-the-packages",
    "title": "Hands-On_Ex04D: Funnel Plots for Fair Comparisons",
    "section": "2.1 Installing and loading the packages",
    "text": "2.1 Installing and loading the packages\nIn this exercise, four R packages will be used. They are:\n\nreadr for importing csv into R.\nFunnelPlotR for creating funnel plot.\nggplot2 for creating funnel plot manually.\nknitr for building static html table.\nplotly for creating interactive funnel plot.\n\n\npacman::p_load(tidyverse, FunnelPlotR, plotly, knitr)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04D.html#data-import",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04D.html#data-import",
    "title": "Hands-On_Ex04D: Funnel Plots for Fair Comparisons",
    "section": "2.2 Data import",
    "text": "2.2 Data import\nIn this section, COVID-19_DKI_Jakarta will be used. The data was downloaded from Open Data Covid-19 Provinsi DKI Jakarta portal. For this hands-on exercise, we are going to compare the cumulative COVID-19 cases and death by sub-district (i.e. kelurahan) as at 31st July 2021, DKI Jakarta.\nThe code chunk below imports the data into R and save it into a tibble data frame object called covid19.\n\ncovid19 &lt;- read_csv(\"data/COVID-19_DKI_Jakarta.csv\") %&gt;%\n  mutate_if(is.character, as.factor)\n\ncovid19\n\n# A tibble: 267 × 7\n   `Sub-district ID` City       District `Sub-district` Positive Recovered Death\n               &lt;dbl&gt; &lt;fct&gt;      &lt;fct&gt;    &lt;fct&gt;             &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;\n 1        3172051003 JAKARTA U… PADEMAN… ANCOL              1776      1691    26\n 2        3173041007 JAKARTA B… TAMBORA  ANGKE              1783      1720    29\n 3        3175041005 JAKARTA T… KRAMAT … BALE KAMBANG       2049      1964    31\n 4        3175031003 JAKARTA T… JATINEG… BALI MESTER         827       797    13\n 5        3175101006 JAKARTA T… CIPAYUNG BAMBU APUS         2866      2792    27\n 6        3174031002 JAKARTA S… MAMPANG… BANGKA             1828      1757    26\n 7        3175051002 JAKARTA T… PASAR R… BARU               2541      2433    37\n 8        3175041004 JAKARTA T… KRAMAT … BATU AMPAR         3608      3445    68\n 9        3171071002 JAKARTA P… TANAH A… BENDUNGAN HIL…     2012      1937    38\n10        3175031002 JAKARTA T… JATINEG… BIDARA CINA        2900      2773    52\n# ℹ 257 more rows"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04D.html#funnelplotr-methods-the-basic-plot",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04D.html#funnelplotr-methods-the-basic-plot",
    "title": "Hands-On_Ex04D: Funnel Plots for Fair Comparisons",
    "section": "3.1 FunnelPlotR methods: The basic plot",
    "text": "3.1 FunnelPlotR methods: The basic plot\nThe code chunk below plots a funnel plot.\n\nfunnel_plot(\n  numerator = covid19$Positive,\n  denominator = covid19$Death,\n  group = covid19$`Sub-district`\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion. \n\n\nA funnel plot object with 267 points of which 0 are outliers. Plot is adjusted for overdispersion.\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\ngroup in this function is different from the scatterplot. Here, it defines the level of the points to be plotted i.e. Sub-district, District or City. If Cityc is chosen, there are only six data points.\nBy default, data_typeargument is “SR”.\nlimit: Plot limits, accepted values are: 95 or 99, corresponding to 95% or 99.8% quantiles of the distribution."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04D.html#funnelplotr-methods-makeover-1",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04D.html#funnelplotr-methods-makeover-1",
    "title": "Hands-On_Ex04D: Funnel Plots for Fair Comparisons",
    "section": "3.2 FunnelPlotR methods: Makeover 1",
    "text": "3.2 FunnelPlotR methods: Makeover 1\n\nfunnel_plot(\n  numerator = covid19$Death,\n  denominator = covid19$Positive,\n  group = covid19$`Sub-district`,\n  data_type = \"PR\",     #&lt;&lt;\n  xrange = c(0, 6500),  #&lt;&lt;\n  yrange = c(0, 0.05)   #&lt;&lt;\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\nA funnel plot object with 267 points of which 7 are outliers. Plot is adjusted for overdispersion.\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n+ data_type argument is used to change from default “SR” to “PR” (i.e. proportions). + xrange and yrange are used to set the range of x-axis and y-axis"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04D.html#funnelplotr-methods-makeover-2",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04D.html#funnelplotr-methods-makeover-2",
    "title": "Hands-On_Ex04D: Funnel Plots for Fair Comparisons",
    "section": "3.3 FunnelPlotR methods: Makeover 2",
    "text": "3.3 FunnelPlotR methods: Makeover 2\nThe code chunk below plots a funnel plot.\n\nfunnel_plot(\n  numerator = covid19$Death,\n  denominator = covid19$Positive,\n  group = covid19$`Sub-district`,\n  data_type = \"PR\",   \n  xrange = c(0, 6500),  \n  yrange = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by Cumulative Total Number of COVID-19 Positive Cases\", #&lt;&lt;           \n  x_label = \"Cumulative COVID-19 Positive Cases\", #&lt;&lt;\n  y_label = \"Cumulative Fatality Rate\"  #&lt;&lt;\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\nA funnel plot object with 267 points of which 7 are outliers. Plot is adjusted for overdispersion.\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nlabel = NA argument is to removed the default label outliers feature.\ntitle argument is used to add plot title.\nx_label and y_label arguments are used to add/edit x-axis and y-axis titles."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04D.html#computing-the-basic-derived-fields",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04D.html#computing-the-basic-derived-fields",
    "title": "Hands-On_Ex04D: Funnel Plots for Fair Comparisons",
    "section": "4.1 Computing the basic derived fields",
    "text": "4.1 Computing the basic derived fields\nTo plot the funnel plot from scratch, we need to derive cumulative death rate and standard error of cumulative death rate.\n\ndf &lt;- covid19 %&gt;%\n  mutate(rate = Death / Positive) %&gt;%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %&gt;%\n  filter(rate &gt; 0)\n\nNext, the fit.mean is computed by using the code chunk below.\n\nfit.mean &lt;- weighted.mean(df$rate, 1/df$rate.se^2)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04D.html#calculate-lower-and-upper-limits-for-95-and-99.9-ci",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04D.html#calculate-lower-and-upper-limits-for-95-and-99.9-ci",
    "title": "Hands-On_Ex04D: Funnel Plots for Fair Comparisons",
    "section": "4.2 Calculate lower and upper limits for 95% and 99.9% CI",
    "text": "4.2 Calculate lower and upper limits for 95% and 99.9% CI\nThe code chunk below is used to compute the lower and upper limits for 95% confidence interval.\n\nnumber.seq &lt;- seq(1, max(df$Positive), 1)\nnumber.ll95 &lt;- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 &lt;- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 &lt;- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 &lt;- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \ndfCI &lt;- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04D.html#plotting-a-static-funnel-plot",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04D.html#plotting-a-static-funnel-plot",
    "title": "Hands-On_Ex04D: Funnel Plots for Fair Comparisons",
    "section": "4.3 Plotting a static funnel plot",
    "text": "4.3 Plotting a static funnel plot\nIn the code chunk below, ggplot2 functions are used to plot a static funnel plot.\n\np &lt;- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04D.html#interactive-funnel-plot-plotly-ggplot2",
    "href": "Hands-On_Ex/Hands-On_Ex04/Hands-On_Ex04D.html#interactive-funnel-plot-plotly-ggplot2",
    "title": "Hands-On_Ex04D: Funnel Plots for Fair Comparisons",
    "section": "4.4 Interactive Funnel Plot: plotly + ggplot2",
    "text": "4.4 Interactive Funnel Plot: plotly + ggplot2\nThe funnel plot created using ggplot2 functions can be made interactive with ggplotly() of plotly r package.\n\nfp_ggplotly &lt;- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\"))\nfp_ggplotly"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex01/In-Class_Ex01.html",
    "href": "In-Class_Ex/In-Class_Ex01/In-Class_Ex01.html",
    "title": "In-Class Exercise 01: Now You See It!",
    "section": "",
    "text": "This chapter aims to share on data manipulation using tidyverse, haven, read_rds and write_rds."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex01/In-Class_Ex01.html#loading-r-packages",
    "href": "In-Class_Ex/In-Class_Ex01/In-Class_Ex01.html#loading-r-packages",
    "title": "In-Class Exercise 01: Now You See It!",
    "section": "2.1 Loading R Packages",
    "text": "2.1 Loading R Packages\nIn this in-class exercise, two R packages will be used. They are:\n\ntidyverse, and\nhaven.\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse, haven)"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex01/In-Class_Ex01.html#importing-pisa-data",
    "href": "In-Class_Ex/In-Class_Ex01/In-Class_Ex01.html#importing-pisa-data",
    "title": "In-Class Exercise 01: Now You See It!",
    "section": "2.2 Importing PISA Data",
    "text": "2.2 Importing PISA Data\nThe code chunk below uses the read_sas function from the haven package to import PISA data into R.\n\nstu_qqq &lt;- read_sas(\"data/stu_qqq.sas7bdat\")\n\nAs there are 613,744 observations across many countries, we will next filter the observations to those from Singapore, using the filter function from the dpylr package.\n\nstu_qqq_SG &lt;- stu_qqq %&gt;%\n  filter(CNT == \"SGP\")\n\nWe will then save the file as a rds document in the data folder, using write_rds function. This reduced the file size from 3.9GB to 65.3MB, which will make it easier to push to Github subsequently.\n\nwrite_rds(stu_qqq_SG, \n          \"data/stu_qqq_SG.rds\")\n\nWe will now import the file back into the R enviroment using the read_rds function.\n\nstu_qqq &lt;- read_rds(\"data/stu_qqq_SG.rds\")\n\n\n\n\n\n\n\nImportant\n\n\n\nRemember to:\n\ndelete the 3.9GB source file from the data folder\ninclude #| eval: false into the first three code chunks, to faciliate the subsequent push to Github."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html",
    "href": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html",
    "title": "In-Class Exercise 3: Tableau Visualisation",
    "section": "",
    "text": "In this in-class exercise, we will learn how to use Tableau Public to create interactive scatterplots. You can access the Superstore tableau report here and story here; and the Exam-data dashboard here."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#importing-data",
    "href": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#importing-data",
    "title": "In-Class Exercise 3: Tableau Visualisation",
    "section": "2.1 Importing Data",
    "text": "2.1 Importing Data\nWe will build on what we have created during In-Class Exercise 2 here."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#creating-a-scatter-plot",
    "href": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#creating-a-scatter-plot",
    "title": "In-Class Exercise 3: Tableau Visualisation",
    "section": "3.1 Creating a Scatter Plot",
    "text": "3.1 Creating a Scatter Plot\n\nAt first glance, the data points have been automatically aggregated. From Analysis tab, uncheck “Aggregate Measures” to reveal the scatter plot.\n\nThis is the resulting scatter plot.\n\nTo make the scatter plot less cluttered, we can select “Percentile”.\n\n\n\n\n\n\n\nTip\n\n\n\nYTD Total, Compound Growth Rate, Year on Year Growth and YTD Growth can be used for time series visualisation.\n\n\nWe will next aggregate the points based on states, by using “Compute using State” and “Aggregate Measures” as shown below:\n\nResulting scatter plot as follows:\n\nTo insert trendlines, we can do so by selecting “Trend Line”. We can also derive the trend lines of specific observations by choosing specific points on the scatter plot.\n\nUnlike JMP where we can use the “lasso tool”, Tableau does not allow us to choose points of odd shapes. To overcome this, we need to select using the box select tool, then unselect those points we do not want.\n\nNext, we will change the size of the scatter plot. First, we drag “sales” to “Size”\n\nNext, changing the colour and opacity of the scatter plot.\n\n\nWe will also plot reference lines on the scatterplot so as to better visualise how the observations can be catergorised into four different quadrants.\n\nWe will now have a scatterplot categorised into four quadrants\n\nWe can also add a “Filter” option on the scatter plot to improve the interactivity.\n\nAlthough we can display the filter panel on the right, but we notice that the graph disappears when none of the options are checked, which can lead to unnecessary panic.\n\nTo prevent that, we can mandate that at least one option needs to be chosen.\n\nWe can help readers zoom into the details of each point. First, we need to create a new sheet name to follow the selected year. We will create a new sheet, and create a new annual sales and profit chart.\n\nCreating a dual axis for profits, so that the profits and losses will be reflected in blue and red respectively.\n\nResizing the charts so that we can view on both desktop and handphone.\n\n\nWe can also customising the animation effects that we want to visualise on the scatter plot.\n\nInserting details\n\nAnd now, we have an interactive scatter plot."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#creating-dashboards-and-story-points",
    "href": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#creating-dashboards-and-story-points",
    "title": "In-Class Exercise 3: Tableau Visualisation",
    "section": "3.2 Creating Dashboards and Story Points",
    "text": "3.2 Creating Dashboards and Story Points\nWe can use dashboards to combine different visualisation sheets together.\nWe can use story points to combine different visualisation sheets and/or dashboards together.\nWe will practice this by importing the Exam_data.csv, then creating scatterplot and adjust the size and shape.\n\nWe would like to add a boxplot to the scatter plot. To do this, we will click on “Show Me”. We noticed that the boxplot option is actually greyed out, and we are unable to select this option. To overcome this, we will first click on Histogram, which then allows to select the boxplot option.\nThereafter, we will drag “ID” into Detail, and replace “CNT(English)” with “SUM(English)”.\n\nWe will duplicate the sheet and change “SUM(Engligh)” to “SUM(Maths)” to display the maths scores.\n\nWe will now use a Dashboard to piece the scatterplot and boxplots together."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#creating-coordinated-link-view-for-interactivity",
    "href": "In-Class_Ex/In-Class_Ex03/In-Class_Ex03.html#creating-coordinated-link-view-for-interactivity",
    "title": "In-Class Exercise 3: Tableau Visualisation",
    "section": "3.3 Creating Coordinated Link View for Interactivity",
    "text": "3.3 Creating Coordinated Link View for Interactivity\nTo create a coordinated link view, we will check the aggregation for scatterplot, then drag “ID” into the Detail for each of the three sheets. This will allow the common identifiable between the three sheets to be “ID”.\nFirst, we will work on the scatter plot. Click Dashboard/ Actions/ Add actions/ Highlight and check those sheets that we want to be coordinated, as shown below:\n\nWe will repeat the above step for both Maths and English boxplots. This allows the points on the scatterplot to be selected when readers select any point on either of the boxplot.\n\nWe can adjust the layout (aka stitching) so that the axes across the different plots are synchronised, using Dashboard/Blank.\n\n\n\n\n\n\n\nNote\n\n\n\nAs this is the first time we are using the Exam_data.csv, we will need to extract the exam_data before publishing."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html",
    "title": "Take Home Exercise 01: Creating Data Visualisation Beyond Default",
    "section": "",
    "text": "OECD education director Andreas Schleicher shared in a BBC article that “Singapore managed to achieve excellence without wide differences between children from wealthy and disadvantaged families.” (2016) Furthermore, several Singapore’s Minister for Education also started an “every school a good school” slogan. The general public, however, strongly belief that there are still disparities that exist, especially between the elite schools and neighborhood school, between students from families with higher socioeconomic status and those with relatively lower socioeconomic status and immigration and non-immigration families."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#loading-r-packages",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#loading-r-packages",
    "title": "Take Home Exercise 01: Creating Data Visualisation Beyond Default",
    "section": "3.1 Loading R Packages",
    "text": "3.1 Loading R Packages\nIn this take-home exercise, two R packages will be used. They are:\n\ntidyverse, and\nhaven.\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse, haven, knitr, kableExtra, intsvy, ggrepel, patchwork, \n               ggthemes, hrbrthemes, ggdist, ggridges, colorspace, gridExtra)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#importing-pisa-2022-data",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#importing-pisa-2022-data",
    "title": "Take Home Exercise 01: Creating Data Visualisation Beyond Default",
    "section": "3.2 Importing PISA 2022 Data",
    "text": "3.2 Importing PISA 2022 Data\nThe code chunk below uses the read_sas function from the haven package to import PISA data into R.\n\nstu_qqq &lt;- read_sas(\"data/stu_qqq.sas7bdat\")\n\nWe will next filter the observations to those from Singapore, using the filter function from the dpylr package.\n\nstu_qqq_SG &lt;- stu_qqq %&gt;%\n  filter(CNT == \"SGP\")\n\nWe will then save the file as a rds document in the data folder, using write_rds function. This reduces the file size from 3.9GB to 65.3MB, which makes it easier to push to Github subsequently.\n\nwrite_rds(stu_qqq_SG, \"data/stu_qqq_SG.rds\")\n\nWe will now import the file back into the R enviroment using the read_rds function.\n\nstu_qqq_SG &lt;- read_rds(\"data/stu_qqq_SG.rds\")\n\n\n\n\n\n\n\nWarning\n\n\n\nRemember to:\n\ndelete the 3.9GB source file from the data folder; and\ninclude “#| eval: false” into the first three code chunks of this section."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#summary-statistics-of-data",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#summary-statistics-of-data",
    "title": "Take Home Exercise 01: Creating Data Visualisation Beyond Default",
    "section": "3.3 Summary Statistics of Data",
    "text": "3.3 Summary Statistics of Data\n\nFirst 5 RowsDataset StructureData Health\n\n\nDisplaying the first five rows using head():\n\nhead(stu_qqq_SG,5)\n\n# A tibble: 5 × 1,279\n  CNT   CNTRYID CNTSCHID CNTSTUID CYC   NatCen STRATUM SUBNATIO REGION  OECD\n  &lt;chr&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;   &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt;\n1 SGP       702 70200052 70200001 08MS  070200 SGP01   7020000   70200     0\n2 SGP       702 70200134 70200002 08MS  070200 SGP01   7020000   70200     0\n3 SGP       702 70200112 70200003 08MS  070200 SGP01   7020000   70200     0\n4 SGP       702 70200004 70200004 08MS  070200 SGP01   7020000   70200     0\n5 SGP       702 70200152 70200005 08MS  070200 SGP01   7020000   70200     0\n# ℹ 1,269 more variables: ADMINMODE &lt;dbl&gt;, LANGTEST_QQQ &lt;dbl&gt;,\n#   LANGTEST_COG &lt;dbl&gt;, LANGTEST_PAQ &lt;dbl&gt;, Option_CT &lt;dbl&gt;, Option_FL &lt;dbl&gt;,\n#   Option_ICTQ &lt;dbl&gt;, Option_WBQ &lt;dbl&gt;, Option_PQ &lt;dbl&gt;, Option_TQ &lt;dbl&gt;,\n#   Option_UH &lt;dbl&gt;, BOOKID &lt;dbl&gt;, ST001D01T &lt;dbl&gt;, ST003D02T &lt;dbl&gt;,\n#   ST003D03T &lt;dbl&gt;, ST004D01T &lt;dbl&gt;, ST250Q01JA &lt;dbl&gt;, ST250Q02JA &lt;dbl&gt;,\n#   ST250Q03JA &lt;dbl&gt;, ST250Q04JA &lt;dbl&gt;, ST250Q05JA &lt;dbl&gt;, ST250D06JA &lt;chr&gt;,\n#   ST250D07JA &lt;chr&gt;, ST251Q01JA &lt;dbl&gt;, ST251Q02JA &lt;dbl&gt;, ST251Q03JA &lt;dbl&gt;, …\n\n\n\n\n\n\n\n\nNote\n\n\n\nAt first look,the data table seemed to be in order.\n\n\n\n\nChecking the structure of stu_qqq_SG using str():\n\nstr(stu_qqq_SG) \n\ntibble [6,606 × 1,279] (S3: tbl_df/tbl/data.frame)\n $ CNT         : chr [1:6606] \"SGP\" \"SGP\" \"SGP\" \"SGP\" ...\n  ..- attr(*, \"label\")= chr \"Country code 3-character\"\n $ CNTRYID     : num [1:6606] 702 702 702 702 702 702 702 702 702 702 ...\n  ..- attr(*, \"label\")= chr \"Country Identifier\"\n $ CNTSCHID    : num [1:6606] 70200052 70200134 70200112 70200004 70200152 ...\n  ..- attr(*, \"label\")= chr \"Intl. School ID\"\n $ CNTSTUID    : num [1:6606] 70200001 70200002 70200003 70200004 70200005 ...\n  ..- attr(*, \"label\")= chr \"Intl. Student ID\"\n $ CYC         : chr [1:6606] \"08MS\" \"08MS\" \"08MS\" \"08MS\" ...\n  ..- attr(*, \"label\")= chr \"PISA Assessment Cycle (2 digits + 2 character Assessment type - MS/FT)\"\n $ NatCen      : chr [1:6606] \"070200\" \"070200\" \"070200\" \"070200\" ...\n  ..- attr(*, \"label\")= chr \"National Centre 6-digit Code\"\n $ STRATUM     : chr [1:6606] \"SGP01\" \"SGP01\" \"SGP01\" \"SGP01\" ...\n  ..- attr(*, \"label\")= chr \"Stratum ID 5-character (cnt + original stratum ID)\"\n $ SUBNATIO    : chr [1:6606] \"7020000\" \"7020000\" \"7020000\" \"7020000\" ...\n  ..- attr(*, \"label\")= chr \"Adjudicated sub-region code 7-digit code (3-digit country code + region ID + stratum ID)\"\n $ REGION      : num [1:6606] 70200 70200 70200 70200 70200 70200 70200 70200 70200 70200 ...\n  ..- attr(*, \"label\")= chr \"REGION\"\n $ OECD        : num [1:6606] 0 0 0 0 0 0 0 0 0 0 ...\n  ..- attr(*, \"label\")= chr \"OECD country\"\n $ ADMINMODE   : num [1:6606] 2 2 2 2 2 2 2 2 2 2 ...\n  ..- attr(*, \"label\")= chr \"Mode of Respondent\"\n $ LANGTEST_QQQ: num [1:6606] 313 313 313 313 313 313 313 313 313 313 ...\n  ..- attr(*, \"label\")= chr \"Language of Questionnaire\"\n $ LANGTEST_COG: num [1:6606] 313 313 313 313 313 313 313 313 313 313 ...\n  ..- attr(*, \"label\")= chr \"Language of Assessment\"\n $ LANGTEST_PAQ: num [1:6606] NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"label\")= chr \"Language of Parent Questionnaire\"\n $ Option_CT   : num [1:6606] NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"label\")= chr \"Creative Thinking Option\"\n $ Option_FL   : num [1:6606] NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"label\")= chr \"Financial Literacy Option\"\n $ Option_ICTQ : num [1:6606] 1 1 1 1 1 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"ICT Questionnaire Option\"\n $ Option_WBQ  : num [1:6606] 0 0 0 0 0 0 0 0 0 0 ...\n  ..- attr(*, \"label\")= chr \"Well-Being Questionnaire Option\"\n $ Option_PQ   : num [1:6606] 0 0 0 0 0 0 0 0 0 0 ...\n  ..- attr(*, \"label\")= chr \"Parent Questionnaire Option\"\n $ Option_TQ   : num [1:6606] 0 0 0 0 0 0 0 0 0 0 ...\n  ..- attr(*, \"label\")= chr \"Teacher Questionnaire Option\"\n $ Option_UH   : num [1:6606] 0 0 0 0 0 0 0 0 0 0 ...\n  ..- attr(*, \"label\")= chr \"Une Heure Option\"\n $ BOOKID      : num [1:6606] 4 45 8 40 42 15 13 39 14 7 ...\n  ..- attr(*, \"label\")= chr \"Form Identifier\"\n $ ST001D01T   : num [1:6606] 10 10 10 10 10 10 10 10 10 10 ...\n  ..- attr(*, \"label\")= chr \"Student International Grade (Derived)\"\n $ ST003D02T   : num [1:6606] 10 6 7 2 9 9 3 4 8 6 ...\n  ..- attr(*, \"label\")= chr \"Student (Standardized) Birth - Month\"\n $ ST003D03T   : num [1:6606] 2006 2006 2006 2006 2006 ...\n  ..- attr(*, \"label\")= chr \"Student (Standardized) Birth -Year\"\n $ ST004D01T   : num [1:6606] 1 2 2 2 1 1 2 2 1 2 ...\n  ..- attr(*, \"label\")= chr \"Student (Standardized) Gender\"\n $ ST250Q01JA  : num [1:6606] 2 1 1 2 2 2 1 1 2 2 ...\n  ..- attr(*, \"label\")= chr \"Which of the following are in your [home]: A room of your own\"\n $ ST250Q02JA  : num [1:6606] 1 1 1 1 1 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Which of the following are in your [home]: A computer (laptop, desktop, or tablet) that you can use for school work\"\n $ ST250Q03JA  : num [1:6606] 1 1 2 1 1 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Which of the following are in your [home]: Educational Software or Apps\"\n $ ST250Q04JA  : num [1:6606] 1 1 1 1 1 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Which of the following are in your [home]: Your own [cell phone] with Internet access (e.g. smartphone)\"\n $ ST250Q05JA  : num [1:6606] 1 1 1 1 1 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Which of the following are in your [home]: Internet access (e.g. Wi-fi) (excluding through smartphones)\"\n $ ST250D06JA  : chr [1:6606] \"7020002\" \"7020001\" \"7020001\" \"7020002\" ...\n  ..- attr(*, \"label\")= chr \"Which of the following are in your home? &lt;Country-specific item 1&gt;\"\n $ ST250D07JA  : chr [1:6606] \"7020002\" \"7020001\" \"7020002\" \"7020002\" ...\n  ..- attr(*, \"label\")= chr \"Which of the following are in your home? &lt;Country-specific item 2&gt;\"\n $ ST251Q01JA  : num [1:6606] 2 1 2 1 2 2 2 1 3 3 ...\n  ..- attr(*, \"label\")= chr \"How many of these items are there at your [home]: Cars, vans, or trucks\"\n $ ST251Q02JA  : num [1:6606] 1 4 1 2 2 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"How many of these items are there at your [home]: Mopeds or motorcycles\"\n $ ST251Q03JA  : num [1:6606] 3 3 3 3 2 2 3 3 4 3 ...\n  ..- attr(*, \"label\")= chr \"How many of these items are there at your [home]: Rooms with a bath or shower\"\n $ ST251Q04JA  : num [1:6606] 3 3 3 3 2 3 3 3 4 3 ...\n  ..- attr(*, \"label\")= chr \"How many of these items are there at your [home]: Rooms with a [flush toilet]\"\n $ ST251Q06JA  : num [1:6606] 3 4 2 2 1 2 2 3 4 1 ...\n  ..- attr(*, \"label\")= chr \"How many of these items are there at your [home]: Musical instruments (e.g. guitar, piano, [country-specific example])\"\n $ ST251Q07JA  : num [1:6606] 3 2 1 1 4 1 4 1 4 3 ...\n  ..- attr(*, \"label\")= chr \"How many of these items are there at your [home]: Works of art (e.g. paintings, sculptures, [country-specific example])\"\n $ ST251D08JA  : chr [1:6606] \"9999997\" \"9999997\" \"9999997\" \"9999997\" ...\n  ..- attr(*, \"label\")= chr \"How many of these items are there at your home? &lt;Country-specific item 1&gt;\"\n $ ST251D09JA  : chr [1:6606] \"9999997\" \"9999997\" \"9999997\" \"9999997\" ...\n  ..- attr(*, \"label\")= chr \"How many of these items are there at your home? &lt;Country-specific item 2&gt;\"\n $ ST253Q01JA  : num [1:6606] 7 8 7 6 7 7 8 8 8 7 ...\n  ..- attr(*, \"label\")= chr \"How many [digital devices] with screens are there in your [home]?\"\n $ ST254Q01JA  : num [1:6606] 2 3 2 2 2 2 2 2 2 2 ...\n  ..- attr(*, \"label\")= chr \"How many of the following [digital devices] are in your [home]: Televisions\"\n $ ST254Q02JA  : num [1:6606] 1 2 2 1 3 2 2 5 2 2 ...\n  ..- attr(*, \"label\")= chr \"How many of the following [digital devices] are in your [home]: Desktop computers\"\n $ ST254Q03JA  : num [1:6606] 3 2 2 2 2 2 3 3 3 4 ...\n  ..- attr(*, \"label\")= chr \"How many of the following [digital devices] are in your [home]: Laptop computers or notebooks\"\n $ ST254Q04JA  : num [1:6606] 2 3 2 1 1 2 2 3 3 2 ...\n  ..- attr(*, \"label\")= chr \"How many of the following [digital devices] are in your [home]: Tablets (e.g. [iPad®], [BlackBerry® Playbook™])\"\n $ ST254Q05JA  : num [1:6606] 1 5 1 1 NA 1 1 5 2 2 ...\n  ..- attr(*, \"label\")= chr \"How many of the following [digital devices] are in your [home]: E-book readers (e.g. [Kindle™], [Kobo], [Bookeen])\"\n $ ST254Q06JA  : num [1:6606] 3 2 3 3 4 2 4 3 4 4 ...\n  ..- attr(*, \"label\")= chr \"How many of the following [digital devices] are in your [home]: [Cell phones] with Internet access (i.e. smartphones)\"\n $ ST255Q01JA  : num [1:6606] 7 4 4 3 2 2 4 5 7 4 ...\n  ..- attr(*, \"label\")= chr \"How many books are there in your [home]?\"\n $ ST256Q01JA  : num [1:6606] 2 4 5 2 4 1 1 3 4 4 ...\n  ..- attr(*, \"label\")= chr \"How many of these books at [home]: Religious books (e.g. [Bible], [Example 2])\"\n $ ST256Q02JA  : num [1:6606] 2 5 2 1 1 2 1 5 4 2 ...\n  ..- attr(*, \"label\")= chr \"How many of these books at [home]: Classical literature (e.g. [Shakespeare], [Example 2])\"\n $ ST256Q03JA  : num [1:6606] 4 5 2 1 1 2 2 5 5 1 ...\n  ..- attr(*, \"label\")= chr \"How many of these books at [home]: Contemporary literature\"\n $ ST256Q06JA  : num [1:6606] 4 3 3 2 2 5 2 4 4 1 ...\n  ..- attr(*, \"label\")= chr \"How many of these books at [home]: Books on science\"\n $ ST256Q07JA  : num [1:6606] 3 5 5 2 2 5 1 4 3 1 ...\n  ..- attr(*, \"label\")= chr \"How many of these books at [home]: Books on art, music, or design\"\n $ ST256Q08JA  : num [1:6606] 3 3 3 1 1 5 1 5 5 2 ...\n  ..- attr(*, \"label\")= chr \"How many of these books at [home]: [Technical reference books]\"\n $ ST256Q09JA  : num [1:6606] 2 2 4 2 2 2 2 2 2 3 ...\n  ..- attr(*, \"label\")= chr \"How many of these books at [home]: Dictionaries\"\n $ ST256Q10JA  : num [1:6606] 4 4 5 2 4 1 4 4 4 3 ...\n  ..- attr(*, \"label\")= chr \"How many of these books at [home]: Books to help with your school work\"\n $ ST230Q01JA  : num [1:6606] 4 4 2 4 4 3 2 2 3 4 ...\n  ..- attr(*, \"label\")= chr \"How many siblings (including brothers, sisters, step-brothers, and step-sisters) do you have?\"\n $ ST005Q01JA  : num [1:6606] 2 2 2 2 2 2 2 2 2 2 ...\n  ..- attr(*, \"label\")= chr \"What is the [highest level of schooling] completed by your mother?\"\n $ ST006Q01JA  : num [1:6606] 2 2 2 2 2 2 2 NA 2 2 ...\n  ..- attr(*, \"label\")= chr \"Does your mother have any of the following qualifications: [ISCED level 8]\"\n $ ST006Q02JA  : num [1:6606] 2 2 2 2 2 2 2 1 2 2 ...\n  ..- attr(*, \"label\")= chr \"Does your mother have any of the following qualifications: [ISCED level 7]\"\n $ ST006Q03JA  : num [1:6606] 1 2 2 2 2 2 2 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Does your mother have any of the following qualifications: [ISCED level 6]\"\n $ ST006Q04JA  : num [1:6606] 2 1 2 2 1 1 2 1 1 2 ...\n  ..- attr(*, \"label\")= chr \"Does your mother have any of the following qualifications: [ISCED level 5]\"\n $ ST006Q05JA  : num [1:6606] 1 1 2 1 2 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Does your mother have any of the following qualifications: [ISCED level 4]\"\n $ ST007Q01JA  : num [1:6606] 2 2 2 4 2 2 4 2 2 2 ...\n  ..- attr(*, \"label\")= chr \"What is the [highest level of schooling] completed by your father?\"\n $ ST008Q01JA  : num [1:6606] 2 2 2 NA 2 2 2 NA 2 2 ...\n  ..- attr(*, \"label\")= chr \"Does your father have any of the following qualifications: [ISCED level 8]\"\n $ ST008Q02JA  : num [1:6606] 2 2 2 NA 2 1 2 NA 2 2 ...\n  ..- attr(*, \"label\")= chr \"Does your father have any of the following qualifications: [ISCED level 7]\"\n $ ST008Q03JA  : num [1:6606] 2 2 2 NA 2 1 2 1 1 2 ...\n  ..- attr(*, \"label\")= chr \"Does your father have any of the following qualifications: [ISCED level 6]\"\n $ ST008Q04JA  : num [1:6606] 1 1 2 NA 1 1 2 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Does your father have any of the following qualifications: [ISCED level 5]\"\n $ ST008Q05JA  : num [1:6606] 2 1 2 1 2 1 2 1 1 2 ...\n  ..- attr(*, \"label\")= chr \"Does your father have any of the following qualifications: [ISCED level 4]\"\n $ ST258Q01JA  : num [1:6606] 1 1 1 5 1 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"In the past 30 days, how often did you not eat because there was not enough money to buy food?\"\n $ ST259Q01JA  : num [1:6606] NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"label\")= chr \"Now think about where you would place your family on this scale. Where would you say your family stands at this time?\"\n $ ST259Q02JA  : num [1:6606] NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"label\")= chr \"Now think about where you would place your family on this scale. Where do you think you will stand when you are 30?\"\n $ ST019AQ01T  : num [1:6606] 1 1 1 1 1 2 1 2 1 1 ...\n  ..- attr(*, \"label\")= chr \"In what country were you and your parents born? You\"\n $ ST019BQ01T  : num [1:6606] 1 1 2 1 1 2 1 2 1 1 ...\n  ..- attr(*, \"label\")= chr \"In what country were you and your parents born? Mother\"\n $ ST019CQ01T  : num [1:6606] 1 1 1 1 1 2 1 2 1 1 ...\n  ..- attr(*, \"label\")= chr \"In what country were you and your parents born? Father\"\n $ ST021Q01TA  : num [1:6606] NA NA NA NA NA 1 NA 1 NA NA ...\n  ..- attr(*, \"label\")= chr \"How old were you when you arrived in [country of test]?\"\n $ ST022Q01TA  : num [1:6606] 1 1 2 2 1 2 1 2 1 2 ...\n  ..- attr(*, \"label\")= chr \"What language do you speak at home most of the time?\"\n $ ST226Q01JA  : num [1:6606] 1 1 1 1 1 1 1 4 1 1 ...\n  ..- attr(*, \"label\")= chr \"How long have you been enrolled at this school?\"\n $ ST125Q01NA  : num [1:6606] 3 5 8 4 8 3 4 8 8 4 ...\n  ..- attr(*, \"label\")= chr \"How old were you when you started [ISCED 0]: Years\"\n $ ST126Q01TA  : num [1:6606] 4 5 5 5 5 5 5 5 4 5 ...\n  ..- attr(*, \"label\")= chr \"How old were you when you started [ISCED 1]: Years\"\n $ ST127Q01TA  : num [1:6606] 1 1 1 1 1 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Have you ever repeated a [grade]: At [ISCED 1]\"\n $ ST127Q02TA  : num [1:6606] 1 1 1 1 1 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Have you ever repeated a [grade]: At [ISCED 2]\"\n $ ST127Q03TA  : num [1:6606] 1 1 1 1 1 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Have you ever repeated a [grade]: At [ISCED 3]\"\n $ ST260Q01JA  : num [1:6606] 1 1 1 1 1 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Have you ever missed school for more than three months in a row: At [ISCED 1]\"\n $ ST260Q02JA  : num [1:6606] 1 1 1 1 1 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Have you ever missed school for more than three months in a row: At [ISCED 2]\"\n $ ST260Q03JA  : num [1:6606] 1 1 1 1 1 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Have you ever missed school for more than three months in a row: At [ISCED 3]\"\n $ ST261Q01JA  : num [1:6606] NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"label\")= chr \"Why miss school for 3+ months: I was bored.\"\n $ ST261Q02JA  : num [1:6606] NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"label\")= chr \"Why miss school for 3+ months: I was suspended for something (e.g. violence, aggression, use of drugs, drug dealing).\"\n $ ST261Q03JA  : num [1:6606] NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"label\")= chr \"Why miss school for 3+ months: I was pregnant.\"\n $ ST261Q04JA  : num [1:6606] NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"label\")= chr \"Why miss school for 3+ months: I could not reach school because of transportation problems.\"\n $ ST261Q05JA  : num [1:6606] NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"label\")= chr \"Why miss school for 3+ months: I had to take care of a family member.\"\n $ ST261Q06JA  : num [1:6606] NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"label\")= chr \"Why miss school for 3+ months: I had to help with work at home, the family business, or on the family land.\"\n $ ST261Q07JA  : num [1:6606] NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"label\")= chr \"Why miss school for 3+ months: I had to get work to bring money home.\"\n $ ST261Q08JA  : num [1:6606] NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"label\")= chr \"Why miss school for 3+ months: I was sick.\"\n $ ST261Q09JA  : num [1:6606] NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"label\")= chr \"Why miss school for 3+ months: I did not feel safe at school.\"\n $ ST261Q10JA  : num [1:6606] NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"label\")= chr \"Why miss school for 3+ months: I could not pay [school fees].\"\n $ ST261Q11JA  : num [1:6606] NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"label\")= chr \"Why miss school for 3+ months: School was closed because of a natural disaster (e.g. flood, earthquake).\"\n $ ST062Q01TA  : num [1:6606] 1 1 1 1 2 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"In the last two full weeks of school, how often: I [skipped] a whole school day\"\n  [list output truncated]\n\n\n\n\n\n\n\n\nNote\n\n\n\nA examination of the data structure revealed that the data types are all correct.\n\n\n\n\nChecking for duplicates:\n\nstu_qqq_SG[duplicated(stu_qqq_SG),]\n\n# A tibble: 0 × 1,279\n# ℹ 1,279 variables: CNT &lt;chr&gt;, CNTRYID &lt;dbl&gt;, CNTSCHID &lt;dbl&gt;, CNTSTUID &lt;dbl&gt;,\n#   CYC &lt;chr&gt;, NatCen &lt;chr&gt;, STRATUM &lt;chr&gt;, SUBNATIO &lt;chr&gt;, REGION &lt;dbl&gt;,\n#   OECD &lt;dbl&gt;, ADMINMODE &lt;dbl&gt;, LANGTEST_QQQ &lt;dbl&gt;, LANGTEST_COG &lt;dbl&gt;,\n#   LANGTEST_PAQ &lt;dbl&gt;, Option_CT &lt;dbl&gt;, Option_FL &lt;dbl&gt;, Option_ICTQ &lt;dbl&gt;,\n#   Option_WBQ &lt;dbl&gt;, Option_PQ &lt;dbl&gt;, Option_TQ &lt;dbl&gt;, Option_UH &lt;dbl&gt;,\n#   BOOKID &lt;dbl&gt;, ST001D01T &lt;dbl&gt;, ST003D02T &lt;dbl&gt;, ST003D03T &lt;dbl&gt;,\n#   ST004D01T &lt;dbl&gt;, ST250Q01JA &lt;dbl&gt;, ST250Q02JA &lt;dbl&gt;, ST250Q03JA &lt;dbl&gt;, …\n\n\n\n\n\n\n\n\nNote\n\n\n\nNo duplicated rows were found.\n\n\nChecking for missing values for school ID, gender, social-economical status, and plausible values for maths, reading and science:\n\nstu &lt;- c(stu_qqq_SG$CNTSCHID, stu_qqq_SG$ST004D01T, stu_qqq_SG$ESCS, \n         stu_qqq_SG$PV1MATH, stu_qqq_SG$PV2MATH, stu_qqq_SG$PV3MATH, stu_qqq_SG$PV4MATH, stu_qqq_SG$PV5MATH, stu_qqq_SG$PV6MATH, stu_qqq_SG$PV7MATH, stu_qqq_SG$PV8MATH, stu_qqq_SG$PV9MATH, stu_qqq_SG$PV10MATH, \n         stu_qqq_SG$PV1READ, stu_qqq_SG$PV2READ, stu_qqq_SG$PV3READ, stu_qqq_SG$PV4READ, stu_qqq_SG$PV5READ, stu_qqq_SG$PV6READ, stu_qqq_SG$PV7READ, stu_qqq_SG$PV8READ, stu_qqq_SG$PV9READ, stu_qqq_SG$PV10READ,\n         stu_qqq_SG$PV1SCIE, stu_qqq_SG$PV2SCIE, stu_qqq_SG$PV3SCIE, stu_qqq_SG$PV4SCIE, stu_qqq_SG$PV5SCIE, stu_qqq_SG$PV6SCIE, stu_qqq_SG$PV7SCIE, stu_qqq_SG$PV8SCIE, stu_qqq_SG$PV9SCIE, stu_qqq_SG$PV10SCIE)\n  \nsum(is.na(stu))\n\n[1] 47\n\nsum(is.na(stu_qqq_SG$ESCS))\n\n[1] 47\n\n\n\n\n\n\n\n\nNote\n\n\n\nA total of 47 missing values were found. A deeper study revealed that all 47 missing values were from “socioeconomic status”, which constitutes 0.7% of the dataset. To maintain the integrity of the analysis, these 47 students will be omitted when comparing PISA performance to socioeconomic status."
  }
]