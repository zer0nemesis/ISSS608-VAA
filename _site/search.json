[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "This website documents Roger’s learning journey through the Visual Analytics and Applications Jungle.\nIn this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "",
    "text": "This chapter introduces the basic principles and essential components of ggplot2. At the same time, these components will be used to plot statistical graphics based on the principle of Layered Grammar of Graphics. By the end of this chapter, we will be able to apply the essential graphical elements provided by ggplot2 to create elegant and yet functional statistical graphics."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#install-and-launching-r-packages",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#install-and-launching-r-packages",
    "title": "Hands-On Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, they will be launched into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#importing-the-data",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#importing-the-data",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "2.2 Importing the data",
    "text": "2.2 Importing the data\n\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package.\nreadr is one of the tidyverse package.\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nYear end examination grades of a cohort of primary 3 students from a local school.\nThere are a total of seven attributes. Four of them are categorical data type and the other three are in continuous data type.\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE.\nThe continuous attributes are: MATHS, ENGLISH and SCIENCE."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#plotting-a-simple-bar-chart",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#plotting-a-simple-bar-chart",
    "title": "Hands-On Exercise 1",
    "section": "",
    "text": "ggplot(data = exam_data,\n       aes(x = RACE)) +\n  geom_bar()"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#install-and-launch-r-packages",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#install-and-launch-r-packages",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "2.1 Install and Launch R Packages",
    "text": "2.1 Install and Launch R Packages\nBefore we get started, it is important for us to ensure that the required R packages have been installed. If yes, we will load the R packages. If they have yet to be installed, we will install the R packages and load them onto R environment.\nThe code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, they will be launched into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#r-graphic-vs-ggplot",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#r-graphic-vs-ggplot",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "3.1 R Graphic VS ggplot",
    "text": "3.1 R Graphic VS ggplot\nFirst, let us compare how R Graphics, the core graphical functions of Base R and ggplot plot a simple histogram.\n\nhist(exam_data$MATHS)\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\nAs you can see that the code chunk is relatively simple if R Graphics is used. Then, the question is why ggplot2 is recommended? The transferable skills from ggplot2 are not the idiosyncrasies of plotting syntax, but a powerful way of thinking about visualisation, as a way of mapping between variables and the visual properties of geometric objects that you can perceive."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#a-layered-grammar-of-graphics",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#a-layered-grammar-of-graphics",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "4.1 A Layered Grammar of Graphics",
    "text": "4.1 A Layered Grammar of Graphics\nggplot2 is an implementation of Leland Wilkinson’s Grammar of Graphics. Figure below shows the seven grammars of ggplot2.\n\n\n\nReference: Hadley Wickham (2010) “A layered grammar of graphics.” Journal of Computational and Graphical Statistics, vol. 19, no. 1, pp. 3–28.\n\n\nA short description of each building block are as follows:\n\nData: The dataset being plotted.\nAesthetics take attributes of the data and use them to influence visual characteristics, such as position, colours, size, shape, or transparency.\nGeometrics: The visual elements used for our data, such as point, bar or line.\nFacets split the data into subsets to create multiple variations of the same graph (paneling, multiple plots).\nStatistics, statiscal transformations that summarise data (e.g. mean, confidence intervals).\nCoordinate systems define the plane on which data are mapped on the graphic.\nThemes modify all non-data components of a plot, such as main title, sub-title, y-aixs title, or legend background."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#geometric-objects-geom_bar",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#geometric-objects-geom_bar",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "7.1 Geometric Objects: geom_bar",
    "text": "7.1 Geometric Objects: geom_bar\nThe code chunk below plots a bar chart by using geom_bar().\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#geometric-objects-geom_dotplot",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#geometric-objects-geom_dotplot",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "7.2 Geometric Objects: geom_dotplot",
    "text": "7.2 Geometric Objects: geom_dotplot\nIn a dot plot, the width of a dot corresponds to the bin width (or maximum width, depending on the binning algorithm), and dots are stacked, with each dot representing one observation.\nIn the code chunk below, geom_dotplot() of ggplot2 is used to plot a dot plot.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\n\nNote:\n\nThe y scale is not very useful, in fact it is very misleading.\n\nThe code chunk below performs the following two steps:\n\nscale_y_continuous() is used to turn off the y-axis, and\nbinwidth argument is used to change the binwidth to 2.5.\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#geometric-objects-geom_histogram",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#geometric-objects-geom_histogram",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "7.3 Geometric Objects: geom_histogram()",
    "text": "7.3 Geometric Objects: geom_histogram()\nIn the code chunk below, geom_histogram() is used to create a simple histogram by using values in MATHS field of exam_data.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()       \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\nNote: The default bin is 30."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#modifying-a-geometric-object-by-changing-geom",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#modifying-a-geometric-object-by-changing-geom",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "7.4 Modifying a geometric object by changing geom()",
    "text": "7.4 Modifying a geometric object by changing geom()\nIn the code chunk below,\n\nbins argument is used to change the number of bins to 20,\nfill argument is used to shade the histogram with light blue color, and\ncolor argument is used to change the outline colour of the bars in black\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#modifying-a-geometric-object-by-changing-aes",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#modifying-a-geometric-object-by-changing-aes",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "7.5 Modifying a geometric object by changing aes()",
    "text": "7.5 Modifying a geometric object by changing aes()\nThe code chunk below changes the interior colour of the histogram (i.e. fill) by using sub-group of aesthetic().\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")\n\n\n\n\nNote: This approach can be used to colour, fill and alpha of the geometric."
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#geometric-objects-geom-density",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#geometric-objects-geom-density",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "7.6 Geometric Objects: geom-density()",
    "text": "7.6 Geometric Objects: geom-density()\ngeom-density() computes and plots kernel density estimate, which is a smoothed version of the histogram.\nIt is a useful alternative to the histogram for continuous data that comes from an underlying smooth distribution.\nThe code below plots the distribution of Maths scores in a kernel density estimate plot.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()           \n\n\n\n\nThe code chunk below plots two kernel density lines by using colour or fill arguments of aes()\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#geometric-objects-geom_boxplot",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#geometric-objects-geom_boxplot",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "7.7 Geometric Objects: geom_boxplot",
    "text": "7.7 Geometric Objects: geom_boxplot\ngeom_boxplot() displays continuous value list. It visualises five summary statistics (the median, two hinges and two whiskers), and all “outlying” points individually.\nThe code chunk below plots boxplots by using geom_boxplot().\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()            \n\n\n\n\nNotches are used in box plots to help visually assess whether the medians of distributions differ. If the notches do not overlap, this is evidence that the medians are different.\nThe code chunk below plots the distribution of Maths scores by gender in notched plot instead of boxplot.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#geometric-objects-geom_violin",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#geometric-objects-geom_violin",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "7.8 Geometric Objects: geom_violin",
    "text": "7.8 Geometric Objects: geom_violin\ngeom_violin is designed for creating violin plot. Violin plots are a way of comparing multiple data distributions. With ordinary density curves, it is difficult to compare more than just a few distributions because the lines visually interfere with each other. With a violin plot, it’s easier to compare several distributions since they’re placed side by side.\nThe code below plot the distribution of Maths score by gender in violin plot.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#geometric-objects-geom_point",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#geometric-objects-geom_point",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "7.9 Geometric Objects: geom_point()",
    "text": "7.9 Geometric Objects: geom_point()\ngeom_point() is especially useful for creating scatterplot.\nThe code chunk below plots a scatterplot showing the Maths and English grades of pupils by using geom_point().\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()"
  },
  {
    "objectID": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#geom-objects-can-be-combined",
    "href": "Hands-On_Ex/Hands-On_Ex01/Hands-On_Ex01.html#geom-objects-can-be-combined",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "7.10 geom objects can be combined",
    "text": "7.10 geom objects can be combined\nThe code chunk below plots the data points on the boxplots by using both geom_boxplot() and geom_point().\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)"
  }
]