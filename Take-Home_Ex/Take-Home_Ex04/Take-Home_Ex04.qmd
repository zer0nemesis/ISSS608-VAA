---
title: "Take-Home_Ex04: Rain, Hail or Shine: Unveiling Mysteries of the Sky"
subtitle: "Working Document for Project Work"
author: "Roger Chen"
date: "24 Feb 2024"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  freeze: true
  warning: false
  message: false
number-sections: true
---

# Overview

In this take home exercise, we will

# Data Preparation

## Loading R Packages

In this take home exercise, the following R packages will be used:

The code chunk used is as follows:

```{r}
pacman::p_load(readr, dplyr, purrr, naniar,kableExtra,
               tidyverse, DT, ggplot2, patchwork, 
               ggridges, ggdist, ggstatsplot,
               plotly, ggiraph, DT, ggdist, 
               ungeviz, crosstalk, 
               viridis, gganimate)
```

## Importing Weather Data

The data sets will be downloaded from [historical daily temperature](https://www.weather.gov.sg/climate-historical-daily/) from [Meteorological Service Singapore](http://www.weather.gov.sg/home/) website,

filter by rain, and temp, load as rds file for faster data wrangling

read rds file

```{r}
#| eval: false
all_data <- read_csv("data/daily_historical.csv")

rain_data <- all_data %>%
  select(station, year, month, day, daily_rainfall_total, highest_30_min_rainfall, highest_60_min_rainfall, highest_120_min_rainfall)

write_rds(rain_data, "data/rain_data.rds")

temp_data <- all_data %>%
  select(station, year, month, day, mean_temperature, maximum_temperature, minimum_temperature)

write_rds(temp_data, "data/temp_data.rds")
```

# Aggregating weather stations by regions

![](images/clipboard-2866862969.png)

```{r}
temp_data <- read_rds("data/temp_data.rds")

temp_data <- temp_data %>%
  mutate(region = case_when(
    (station == "Changi" | station == "East Coast Parkway" | station == "Tai Seng") ~ "East",
     (station == "Clementi" | station == "Tuas South" | station == "Choa Chu Kang (South)" | station == "Jurong (West)" | station == "Jurong Island" | station == "Admiralty") ~ "West",
    (station == "Ang Mo Kio" | station == "Newton"  | station == "Sentosa Island") ~ "Central"
  ))

write_rds(temp_data, "data/temp_data.rds")
```

# Temperature Data EDA

```{r}
temp_data <- read_rds("data/temp_data.rds")

glimpse(temp_data)
```

# Data Wrangling

## Summary Statistics of Data

finding how many missing data

```{r}
sum(is.na(temp_data))
```

dropping those with missing data

```{r}
temp_data <- temp_data %>% drop_na()
```

checking data for missing data again

```{r}
sum(is.na(temp_data))
```

## Aggregating the Mean, Min and Max Temperatures by Month

finding the average, as well as the min and max temperatures by region-month-year

```{r}
monthly_temp_data <- aggregate(mean_temperature ~ year + month, data = temp_data, FUN = mean)
```

```{r}
monthly_mean_temp <- aggregate(mean_temperature ~ region + year + month, data = temp_data, FUN = mean)
```

```{r}
monthly_min_temp <- aggregate(minimum_temperature ~ region + year + month, data = temp_data, FUN = min)
```

```{r}
monthly_max_temp <- aggregate(maximum_temperature ~ region + year + month, data = temp_data, FUN = max)
```

combining the data together

```{r}
merged_temp <- monthly_mean_temp %>%
  left_join(monthly_max_temp, by = c("region", "year", "month")) %>%
  left_join(monthly_min_temp, by = c("region", "year", "month"))

glimpse(merged_temp)
```

::: panel-tabset
## Ridgeline plot

Distribution of mean temperature

```{r}

ridge_plot <- ggplot(monthly_temp_data, aes(x = mean_temperature, y=factor(year), fill = stat(x))) +
  geom_density_ridges_gradient(scale =2,rel_min_height = 0.01, gradient_lwd = 1.) +
                       scale_y_discrete(name= NULL)+
                       scale_fill_viridis_c(name = "째C", option = "C") +
                       labs(title = 'temperature profile',
                        subtitle = 'Distribution of daily mean temperature across years',
                        x = "Temperature (째C)",
                        y = "Year") +
                        theme_ridges(font_size = 13, grid = TRUE) +
  theme(plot.title = element_text(size = 14),
        plot.subtitle = element_text(size = 10),
        axis.title.x = element_text(size = 8),
        axis.title.y = element_text(size = 8, angle = 360))

ridge_plot

```

## Boxplot

Distribution of mean temperature

```{r}
box_plot <- ggplot(monthly_temp_data, 
                   aes(y= mean_temperature,
                       x = as.factor(year))) +
  geom_boxplot()+
  theme(axis.text.x = element_text(angle = 60))

box_plot
```

## Boxplot, by Regions

Distribution of mean temperature

```{r}
#| fig-width: 15
#| fig-height: 12
#| column: screen

box_plot_m <- ggplot(merged_temp, 
                   aes(y= mean_temperature,
                       x = as.factor(year))) +
  geom_boxplot()+
  facet_wrap(~ region) +
  theme(axis.text.x = element_text(angle = 85,
                                   size = 6))

box_plot_m
```

::: callout-note
from the output above, we can tell that Changi station, is the only station with temp data from 1982 to 2008. thus, the average singapore temp will be equals to the changi's data. WIth this mind, we may exclude the 1982 to 2008 data for better comparison.
:::

## Violin plots

Distribution of mean temperature

```{r}
violin_plot <- plot_ly(data = monthly_temp_data, x = ~year, y = ~mean_temperature, type = 'violin', 
               split = ~year, 
               box = list(visible = T),
               meanline = list(visible = T)) %>% # Adds a box plot inside the violin for summary statistics
  layout(title = list(text = "<b>Distribution of Mean Temperatures Across Years</b>", 
                                                   font = list(family = "Arial", size = 14),
                                                   xanchor = "center", xref = "paper",
                                                   yanchor = "middle", yref = "paper"),
                      yaxis = list(title = list(text = "Temperature (째C)", 
                                                font = list(family = "Arial", size = 12)) ),
                      xaxis = list(title = list(text = "Year", 
                                                font = list(family = "Arial", size = 12)) ))

violin_plot
```
:::

```{r}
# Base density plot
ggplot(data = merged_temp, 
       aes(x = mean_temperature, 
           y = region,
           fill = after_stat(x))) +
  
  geom_density_ridges_gradient(scale = 3, 
                               rel_min_height = 0.01) +
  
  scale_fill_viridis_c(name = "Colour Scale",
                       option = "C") +
  
  theme_minimal() +
    labs(title = "Distribution of Mean Temperatures by Region & Year",
      subtitle = "Year: {closest_state}",
       y = "Region",
       x = "Temperature (째C)") +
  
  theme(legend.position="none",
  plot.title = element_text(face = "bold", size = 12),
  axis.title.x = element_text(size = 10),
  axis.title.y = element_text(hjust=1, angle=0, size = 10),
  axis.text = element_text(size = 8),
  plot.background = element_rect(fill = "#f5f5f5", color = "#f5f5f5")) +

  transition_states(year) + 
  ease_aes('linear')

```

# Rain Data EDA

```{r}
rain_data <- read_rds("data/rain_data.rds")

glimpse(rain_data)
```

## Summary Statistics of Data

finding how many missing data

```{r}
sum(is.na(rain_data))
```

dropping those with missing data

```{r}
rain_data <- rain_data %>% drop_na()

```

checking data for missing data again

```{r}
sum(is.na(rain_data))

```

# Static Data Visualisation

::: panel-tabset
## Plot

```{r, fig.width = 15, fig.height = 8}
#| column: page
#| echo: false


          

```

## Code Chunk

```{r}
#| eval: false



```
:::

::: callout-note
:::

# Interactive Data Visualisation

::: panel-tabset
## Plot

```{r, fig.height=12}
#| column: page
#| echo: false


```

## Code Chunk

```{r}
#| eval: false


```
:::

::: callout-note
:::

::: panel-tabset
## Plot

```{r}
#| echo: false

      
```

## Code Chunk

```{r}
#| eval: false




```
:::

::: callout-note
:::

# Conclusion
